#
# Copyright (C) 2019-2025 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
version: v0.0.0
time_zone: UTC
logging:
  format: raw
  level: debug
  logger: glg
server_config:
  servers:
    - name: grpc
      host: 0.0.0.0
      port: 8081
      grpc:
        bidirectional_stream_concurrency: 20
        connection_timeout: ""
        enable_admin: true
        enable_reflection: true
        header_table_size: 0
        initial_conn_window_size: 2097152
        initial_window_size: 1048576
        interceptors:
          - RecoverInterceptor
          - TraceInterceptor
          - MetricInterceptor
        keepalive:
          max_conn_age: ""
          max_conn_age_grace: ""
          max_conn_idle: ""
          min_time: 10m
          permit_without_stream: false
          time: 3h
          timeout: 60s
        max_header_list_size: 0
        max_receive_message_size: 0
        max_send_message_size: 0
        read_buffer_size: 0
        write_buffer_size: 0
      mode: GRPC
      network: tcp
      probe_wait_time: 3s
      restart: true
      socket_option:
        ip_recover_destination_addr: false
        ip_transparent: false
        reuse_addr: true
        reuse_port: true
        tcp_cork: false
        tcp_defer_accept: false
        tcp_fast_open: false
        tcp_no_delay: false
        tcp_quick_ack: false
      socket_path: ""
  health_check_servers:
    - name: liveness
      host: 0.0.0.0
      port: 3000
      http:
        handler_timeout: ""
        idle_timeout: ""
        read_header_timeout: ""
        read_timeout: ""
        shutdown_duration: 5s
        write_timeout: ""
      mode: ""
      network: tcp
      probe_wait_time: 3s
      socket_option:
        ip_recover_destination_addr: false
        ip_transparent: false
        reuse_addr: true
        reuse_port: true
        tcp_cork: false
        tcp_defer_accept: false
        tcp_fast_open: true
        tcp_no_delay: true
        tcp_quick_ack: true
      socket_path: ""
    - name: readiness
      host: 0.0.0.0
      port: 3001
      http:
        handler_timeout: ""
        idle_timeout: ""
        read_header_timeout: ""
        read_timeout: ""
        shutdown_duration: 0s
        write_timeout: ""
      mode: ""
      network: tcp
      probe_wait_time: 3s
      socket_option:
        ip_recover_destination_addr: false
        ip_transparent: false
        reuse_addr: true
        reuse_port: true
        tcp_cork: false
        tcp_defer_accept: false
        tcp_fast_open: true
        tcp_no_delay: true
        tcp_quick_ack: true
      socket_path: ""
  metrics_servers:
  startup_strategy:
    - liveness
    - grpc
    - readiness
  shutdown_strategy:
    - readiness
    - grpc
    - liveness
  full_shutdown_duration: 600s
  tls:
    ca: /path/to/ca
    cert: /path/to/cert
    enabled: false
    insecure_skip_verify: false
    key: /path/to/key
observability:
  enabled: false
  otlp:
    collector_endpoint: "opentelemetry-collector-collector.default.svc.cluster.local:4317"
    trace_batch_timeout: "1s"
    trace_export_timeout: "1m"
    trace_max_export_batch_size: 1024
    trace_max_queue_size: 256
    metrics_export_interval: "1s"
    metrics_export_timeout: "1m"
    attribute:
      namespace: "_MY_POD_NAMESPACE_"
      pod_name: "_MY_POD_NAME_"
      node_name: "_MY_NODE_NAME_"
      service_name: "vald-index-operator"
  metrics:
    enable_cgo: true
    enable_goroutine: true
    enable_memory: true
    enable_version_info: true
    version_info_labels:
      - vald_version
      - server_name
      - git_commit
      - build_time
      - go_version
      - go_os
      - go_arch
      - algorithm_info
  trace:
    enabled: false
operator:
  namespace: default
  agent_name: vald-agent
  agent_namespace: default
  rotator_name: vald-readreplica-rotate
  target_read_replica_id_annotations_key: vald.vdaas.org/target-read-replica-id
  rotation_job_concurrency: 2
  read_replica_enabled: true
  read_replica_label_key: vald-readreplica-id
  job_templates:
    rotate:
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: vald-readreplica-rotate
        labels:
          app: vald-readreplica-rotate
          app.kubernetes.io/name: vald
          helm.sh/chart: vald-v1.7.12
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/component: vald-readreplica-rotate
          app.kubernetes.io/version: v1.7.12
      spec:
        ttlSecondsAfterFinished: 3600
        template:
          metadata:
            labels:
              app: vald-readreplica-rotate
              app.kubernetes.io/name: vald
              helm.sh/chart: vald-v1.7.12
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: release-name
              app.kubernetes.io/component: vald-readreplica-rotate
              app.kubernetes.io/version: v1.7.12
          spec:
            containers:
              - name: vald-readreplica-rotate
                image: "vdaas/vald-readreplica-rotate:pr-2444"
                imagePullPolicy: Always
                volumeMounts:
                  - name: vald-readreplica-rotate-config
                    mountPath: /etc/server/
                livenessProbe:
                  failureThreshold: 2
                  httpGet:
                    path: /liveness
                    port: liveness
                    scheme: HTTP
                  initialDelaySeconds: 5
                  periodSeconds: 3
                  successThreshold: 1
                  timeoutSeconds: 2
                readinessProbe:
                  failureThreshold: 2
                  httpGet:
                    path: /readiness
                    port: readiness
                    scheme: HTTP
                  initialDelaySeconds: 10
                  periodSeconds: 3
                  successThreshold: 1
                  timeoutSeconds: 2
                startupProbe:
                  failureThreshold: 30
                  httpGet:
                    path: /liveness
                    port: liveness
                    scheme: HTTP
                  initialDelaySeconds: 5
                  periodSeconds: 5
                  successThreshold: 1
                  timeoutSeconds: 2
                ports:
                  - name: liveness
                    protocol: TCP
                    containerPort: 3000
                  - name: readiness
                    protocol: TCP
                    containerPort: 3001
                  - name: grpc
                    protocol: TCP
                    containerPort: 8081
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                      - ALL
                  privileged: false
                  readOnlyRootFilesystem: true
                  runAsGroup: 65532
                  runAsNonRoot: true
                  runAsUser: 65532
                env:
                  - name: MY_NODE_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: spec.nodeName
                  - name: MY_POD_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.name
                  - name: MY_POD_NAMESPACE
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.namespace
                  - name: TARGET_READREPLICA_ID_RELEASE_NAME_DEFAULT_VALD
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.annotations['vald.vdaas.org/target-read-replica-id']
            securityContext:
              fsGroup: 65532
              fsGroupChangePolicy: OnRootMismatch
              runAsGroup: 65532
              runAsNonRoot: true
              runAsUser: 65532
            restartPolicy: OnFailure
            volumes:
              - name: vald-readreplica-rotate-config
                configMap:
                  defaultMode: 420
                  name: vald-readreplica-rotate-config
            serviceAccountName: vald-readreplica-rotate
    creation:
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: vald-index-creation
        labels:
          app: vald-index-creation
          app.kubernetes.io/name: vald
          helm.sh/chart: vald-v1.7.12
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/component: vald-index-creation
          app.kubernetes.io/version: v1.7.12
      spec:
        ttlSecondsAfterFinished: 86400
        template:
          metadata:
            labels:
              app: vald-index-creation
              app.kubernetes.io/name: vald
              helm.sh/chart: vald-v1.7.12
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: release-name
              app.kubernetes.io/component: vald-index-creation
              app.kubernetes.io/version: v1.7.12
          spec:
            initContainers:
              - name: wait-for-agent
                image: busybox:stable
                command:
                  - /bin/sh
                  - -e
                  - -c
                  - |
                    until [ "$(wget --server-response --spider --quiet http://vald-agent.default.svc.cluster.local:3001/readiness 2>&1 | awk 'NR==1{print $2}')" == "200" ]; do
                      echo "waiting for agent to be ready..."
                      sleep 2;
                    done
              - name: wait-for-discoverer
                image: busybox:stable
                command:
                  - /bin/sh
                  - -e
                  - -c
                  - |
                    until [ "$(wget --server-response --spider --quiet http://vald-discoverer.default.svc.cluster.local:3001/readiness 2>&1 | awk 'NR==1{print $2}')" == "200" ]; do
                      echo "waiting for discoverer to be ready..."
                      sleep 2;
                    done
            containers:
              - name: vald-index-creation
                image: "vdaas/vald-index-creation:pr-2444"
                imagePullPolicy: Always
                volumeMounts:
                  - name: vald-index-creation-config
                    mountPath: /etc/server/
                livenessProbe:
                  failureThreshold: 2
                  httpGet:
                    path: /liveness
                    port: liveness
                    scheme: HTTP
                  initialDelaySeconds: 5
                  periodSeconds: 3
                  successThreshold: 1
                  timeoutSeconds: 2
                readinessProbe:
                  failureThreshold: 2
                  httpGet:
                    path: /readiness
                    port: readiness
                    scheme: HTTP
                  initialDelaySeconds: 10
                  periodSeconds: 3
                  successThreshold: 1
                  timeoutSeconds: 2
                startupProbe:
                  failureThreshold: 30
                  httpGet:
                    path: /liveness
                    port: liveness
                    scheme: HTTP
                  initialDelaySeconds: 5
                  periodSeconds: 5
                  successThreshold: 1
                  timeoutSeconds: 2
                ports:
                  - name: liveness
                    protocol: TCP
                    containerPort: 3000
                  - name: readiness
                    protocol: TCP
                    containerPort: 3001
                  - name: grpc
                    protocol: TCP
                    containerPort: 8081
                env:
                  - name: MY_NODE_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: spec.nodeName
                  - name: MY_POD_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.name
                  - name: MY_POD_NAMESPACE
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.namespace
            restartPolicy: OnFailure
            volumes:
              - name: vald-index-creation-config
                configMap:
                  defaultMode: 420
                  name: vald-index-creation-config
    save:
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: vald-index-save
        labels:
          app: vald-index-save
          app.kubernetes.io/name: vald
          helm.sh/chart: vald-v1.7.12
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/component: vald-index-save
          app.kubernetes.io/version: v1.7.12
      spec:
        ttlSecondsAfterFinished: 86400
        template:
          metadata:
            labels:
              app: vald-index-save
              app.kubernetes.io/name: vald
              helm.sh/chart: vald-v1.7.12
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: release-name
              app.kubernetes.io/component: vald-index-save
              app.kubernetes.io/version: v1.7.12
          spec:
            initContainers:
              - name: wait-for-agent
                image: busybox:stable
                command:
                  - /bin/sh
                  - -e
                  - -c
                  - |
                    until [ "$(wget --server-response --spider --quiet http://vald-agent.default.svc.cluster.local:3001/readiness 2>&1 | awk 'NR==1{print $2}')" == "200" ]; do
                      echo "waiting for agent to be ready..."
                      sleep 2;
                    done
              - name: wait-for-discoverer
                image: busybox:stable
                command:
                  - /bin/sh
                  - -e
                  - -c
                  - |
                    until [ "$(wget --server-response --spider --quiet http://vald-discoverer.default.svc.cluster.local:3001/readiness 2>&1 | awk 'NR==1{print $2}')" == "200" ]; do
                      echo "waiting for discoverer to be ready..."
                      sleep 2;
                    done
            containers:
              - name: vald-index-save
                image: "vdaas/vald-index-save:pr-2444"
                imagePullPolicy: Always
                volumeMounts:
                  - name: vald-index-save-config
                    mountPath: /etc/server/
                livenessProbe:
                  failureThreshold: 2
                  httpGet:
                    path: /liveness
                    port: liveness
                    scheme: HTTP
                  initialDelaySeconds: 5
                  periodSeconds: 3
                  successThreshold: 1
                  timeoutSeconds: 2
                readinessProbe:
                  failureThreshold: 2
                  httpGet:
                    path: /readiness
                    port: readiness
                    scheme: HTTP
                  initialDelaySeconds: 10
                  periodSeconds: 3
                  successThreshold: 1
                  timeoutSeconds: 2
                startupProbe:
                  failureThreshold: 30
                  httpGet:
                    path: /liveness
                    port: liveness
                    scheme: HTTP
                  initialDelaySeconds: 5
                  periodSeconds: 5
                  successThreshold: 1
                  timeoutSeconds: 2
                ports:
                  - name: liveness
                    protocol: TCP
                    containerPort: 3000
                  - name: readiness
                    protocol: TCP
                    containerPort: 3001
                  - name: grpc
                    protocol: TCP
                    containerPort: 8081
                env:
                  - name: MY_NODE_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: spec.nodeName
                  - name: MY_POD_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.name
                  - name: MY_POD_NAMESPACE
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.namespace
            restartPolicy: OnFailure
            volumes:
              - name: vald-index-save-config
                configMap:
                  defaultMode: 420
                  name: vald-index-save-config
    correction:
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: vald-index-correction
        labels:
          app: vald-index-correction
          app.kubernetes.io/name: vald
          helm.sh/chart: vald-v1.7.12
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/component: vald-index-correction
          app.kubernetes.io/version: v1.7.12
      spec:
        ttlSecondsAfterFinished: 86400
        template:
          metadata:
            labels:
              app: vald-index-correction
              app.kubernetes.io/name: vald
              helm.sh/chart: vald-v1.7.12
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: release-name
              app.kubernetes.io/component: vald-index-correction
              app.kubernetes.io/version: v1.7.12
          spec:
            initContainers:
              - name: wait-for-agent
                image: busybox:stable
                command:
                  - /bin/sh
                  - -e
                  - -c
                  - |
                    until [ "$(wget --server-response --spider --quiet http://vald-agent.default.svc.cluster.local:3001/readiness 2>&1 | awk 'NR==1{print $2}')" == "200" ]; do
                      echo "waiting for agent to be ready..."
                      sleep 2;
                    done
              - name: wait-for-discoverer
                image: busybox:stable
                command:
                  - /bin/sh
                  - -e
                  - -c
                  - |
                    until [ "$(wget --server-response --spider --quiet http://vald-discoverer.default.svc.cluster.local:3001/readiness 2>&1 | awk 'NR==1{print $2}')" == "200" ]; do
                      echo "waiting for discoverer to be ready..."
                      sleep 2;
                    done
            containers:
              - name: vald-index-correction
                image: "vdaas/vald-index-correction:pr-2444"
                imagePullPolicy: Always
                volumeMounts:
                  - name: vald-index-correction-config
                    mountPath: /etc/server/
                livenessProbe:
                  failureThreshold: 2
                  httpGet:
                    path: /liveness
                    port: liveness
                    scheme: HTTP
                  initialDelaySeconds: 5
                  periodSeconds: 3
                  successThreshold: 1
                  timeoutSeconds: 2
                readinessProbe:
                  failureThreshold: 2
                  httpGet:
                    path: /readiness
                    port: readiness
                    scheme: HTTP
                  initialDelaySeconds: 10
                  periodSeconds: 3
                  successThreshold: 1
                  timeoutSeconds: 2
                startupProbe:
                  failureThreshold: 30
                  httpGet:
                    path: /liveness
                    port: liveness
                    scheme: HTTP
                  initialDelaySeconds: 5
                  periodSeconds: 5
                  successThreshold: 1
                  timeoutSeconds: 2
                ports:
                  - name: liveness
                    protocol: TCP
                    containerPort: 3000
                  - name: readiness
                    protocol: TCP
                    containerPort: 3001
                  - name: grpc
                    protocol: TCP
                    containerPort: 8081
                env:
                  - name: MY_NODE_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: spec.nodeName
                  - name: MY_POD_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.name
                  - name: MY_POD_NAMESPACE
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.namespace
            restartPolicy: OnFailure
            volumes:
              - name: vald-index-correction-config
                configMap:
                  defaultMode: 420
                  name: vald-index-correction-config
