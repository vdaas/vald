#
# Copyright (C) 2019-2020 Vdaas.org Vald team ( kpango, rinx, kmrmt )
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

defaults:
  time_zone: UTC
  logging:
    logger: glg
    level: debug
    format: raw
  image:
    tag: nightly
  server_config:
    servers:
      rest:
        enabled: false
        host: 0.0.0.0
        port: 8080
        servicePort: 8080
        server:
          mode: REST
          probe_wait_time: 3s
          http:
            shutdown_duration: 5s
            handler_timeout: 5s
            idle_timeout: 2s
            read_header_timeout: 1s
            read_timeout: 1s
            write_timeout: 1s
      grpc:
        enabled: false
        host: 0.0.0.0
        port: 8081
        servicePort: 8081
        server:
          mode: GRPC
          probe_wait_time: "3s"
          grpc:
            bidirectional_stream_concurrency: 20
            max_receive_message_size: 0
            max_send_message_size: 0
            initial_window_size: 0
            initial_conn_window_size: 0
            keepalive:
              max_conn_idle: ""
              max_conn_age: ""
              max_conn_age_grace: ""
              time: ""
              timeout: ""
            write_buffer_size: 0
            read_buffer_size: 0
            connection_timeout: ""
            max_header_list_size: 0
            header_table_size: 0
            interceptors: []
          restart: true
    healths:
      liveness:
        enabled: false
        host: 0.0.0.0
        port: 3000
        servicePort: 3000
        livenessProbe:
          httpGet:
            path: /liveness
            port: liveness
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 2
          periodSeconds: 3
        server:
          mode: ""
          probe_wait_time: "3s"
          http:
            shutdown_duration: "5s"
            handler_timeout: ""
            idle_timeout: ""
            read_header_timeout: ""
            read_timeout: ""
            write_timeout: ""
      readiness:
        enabled: false
        host: 0.0.0.0
        port: 3001
        servicePort: 3001
        readinessProbe:
          httpGet:
            path: /readiness
            port: readiness
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 2
          periodSeconds: 3
        server:
          mode: ""
          probe_wait_time: "3s"
          http:
            shutdown_duration: "5s"
            handler_timeout: ""
            idle_timeout: ""
            read_header_timeout: ""
            read_timeout: ""
            write_timeout: ""
    metrics:
      pprof:
        enabled: false
        host: 0.0.0.0
        port: 6060
        servicePort: 6060
        server:
          mode: REST
          probe_wait_time: 3s
          http:
            shutdown_duration: 5s
            handler_timeout: 5s
            idle_timeout: 2s
            read_header_timeout: 1s
            read_timeout: 1s
            write_timeout: 1s
      prometheus:
        enabled: false
        host: 0.0.0.0
        port: 6061
        servicePort: 6061
        server:
          mode: REST
          probe_wait_time: 3s
          http:
            shutdown_duration: 5s
            handler_timeout: 5s
            idle_timeout: 2s
            read_header_timeout: 1s
            read_timeout: 1s
            write_timeout: 1s
    full_shutdown_duration: 600s
    tls:
      enabled: false
      cert: /path/to/cert
      key: /path/to/key
      ca: /path/to/ca
  grpc:
    client:
      addrs: []
      connection_pool: 3
      health_check_duration: "1s"
      backoff:
        initial_duration: 5ms
        backoff_time_limit: 5s
        maximum_duration: 5s
        jitter_limit: 100ms
        backoff_factor: 1.1
        retry_count: 100
        enable_error_log: true
      call_option:
        wait_for_ready: true
        max_retry_rpc_buffer_size: 0
        max_recv_msg_size: 0
        max_send_msg_size: 0
      dial_option:
        write_buffer_size: 0
        read_buffer_size: 0
        initial_window_size: 0
        initial_connection_window_size: 0
        max_msg_size: 0
        max_backoff_delay: ""
        enable_backoff: false
        insecure: true
        timeout: ""
        tcp:
          dns:
            cache_enabled: true
            refresh_duration: 30m
            cache_expiration: 1h
          dialer:
            timeout: ""
            keep_alive: ""
            dual_stack_enabled: true
          tls:
            enabled: false
            cert: /path/to/cert
            key: /path/to/key
            ca: /path/to/ca
        keep_alive:
          time: ""
          timeout: ""
          permit_without_stream: false
      tls:
        enabled: false
        cert: /path/to/cert
        key: /path/to/key
        ca: /path/to/ca
  observability:
    enabled: true
    collector:
      duration: 5s
      metrics:
        enable_version_info: true
        enable_cpu: true
        enable_memory: true
        enable_goroutine: true
        enable_cgo: true
    trace:
      enabled: true
      sampling_rate: 1.0
    prometheus:
      enabled: true
    jaeger:
      enabled: false
      collector_endpoint: "" # http://jaeger-collector.default.svc.cluster.local:14268/api/traces
      agent_endpoint: jaeger-agent.default.svc.cluster.local:6831
      username: ""
      password: ""
      service_name: vald
      buffer_max_count: 10

gateway:
  version: v0.0.0
  name: vald-gateway
  kind: Deployment
  # kind: DaemonSet
  serviceType: ClusterIP
  # externalTrafficPolicy: Cluster
  progressDeadlineSeconds: 600
  minReplicas: 3
  maxReplicas: 9
  maxUnavailable: 50%
  revisionHistoryLimit: 2
  terminationGracePeriodSeconds: 30
  hpa:
    enabled: true
    targetCPUUtilizationPercentage: 80
  image:
    repository: vdaas/vald-gateway
    # tag: nightly
    pullPolicy: Always
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%
  initContainers:
    - type: wait-for
      name: wait-for-manager-compressor
      target: compressor
      image: busybox
      sleepDuration: 2
    - type: wait-for
      name: wait-for-meta
      target: meta
      image: busybox
      sleepDuration: 2
    - type: wait-for
      name: wait-for-discoverer
      target: discoverer
      image: busybox
      sleepDuration: 2
    - type: wait-for
      name: wait-for-agent
      target: agent
      image: busybox
      sleepDuration: 2
  env:
    # - name: MY_NODE_NAME
    #   valueFrom:
    #     fieldRef:
    #       fieldPath: spec.nodeName
    - name: MY_POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
  server_config:
    prefix: gateway
    servers:
      rest:
        enabled: false
      grpc:
        enabled: true
    healths:
      liveness:
        enabled: true
      readiness:
        enabled: true
    metrics:
      pprof:
        enabled: false
      prometheus:
        enabled: true
    full_shutdown_duration: 600s
    tls:
      enabled: false
  observability:
    jaeger:
      service_name: vald-gateway
  filter:
    egress:
      - ""
    ingress:
      - ""
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/grpc-backend: "true"
    host: vald.gateway.vdaas.org
    servicePort: grpc
  resources:
    requests:
      cpu: 200m
      memory: 150Mi
    limits:
      cpu: 2000m
      memory: 700Mi
  gateway_config:
    agent_namespace: _MY_POD_NAMESPACE_
    # node_name: _MY_NODE_NAME_
    index_replica: 5
    discoverer:
      duration: 200ms
      discover_client: {}
      agent_client: {}
    meta:
      client: {}
      enable_cache: true
      cache_expiration: "30m"
      expired_cache_check_duration: "3m"
    backup:
      client: {}

agent:
  version: v0.0.0
  name: vald-agent-ngt
  kind: StatefulSet
  # kind: DaemonSet
  # kind: Deployment
  serviceType: ClusterIP
  # externalTrafficPolicy: Cluster
  progressDeadlineSeconds: 600
  minReplicas: 20
  maxReplicas: 300
  maxUnavailable: 1
  revisionHistoryLimit: 2
  terminationGracePeriodSeconds: 30
  podManagementPolicy: OrderedReady
  hpa:
    enabled: true
    targetCPUUtilizationPercentage: 80
  image:
    repository: vdaas/vald-agent-ngt
    # tag: nightly
    pullPolicy: Always
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%
    partition: 0
  server_config:
    prefix: agent
    servers:
      rest:
        enabled: false
      grpc:
        enabled: true
    healths:
      liveness:
        enabled: true
      readiness:
        enabled: true
    metrics:
      pprof:
        enabled: false
      prometheus:
        enabled: true
    full_shutdown_duration: 600s
    tls:
      enabled: false
  observability:
    jaeger:
      service_name: vald-agent-ngt
  resources:
    requests:
      cpu: 300m
      memory: 4Gi # = cluster memory * 0.4 / number of agent pods
  ngt:
    # index_path: /path/to/index
    auto_index_limit: 10m
    auto_index_check_duration: 1m
    auto_index_length: 100
    dimension: 4096
    bulk_insert_chunk_size: 10
    distance_type: l2
    object_type: float
    creation_edge_size: 20
    search_edge_size: 10
    enable_in_memory_mode: true

discoverer:
  version: v0.0.0
  name: vald-discoverer
  kind: Deployment
  # kind: DaemonSet
  serviceType: ClusterIP
  # externalTrafficPolicy: Cluster
  progressDeadlineSeconds: 600
  minReplicas: 1
  maxReplicas: 2
  maxUnavailable: 50%
  revisionHistoryLimit: 2
  terminationGracePeriodSeconds: 30
  image:
    repository: vdaas/vald-discoverer-k8s
    # tag: nightly
    pullPolicy: Always
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%
  env:
    - name: MY_POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
  server_config:
    prefix: discoverer
    servers:
      rest:
        enabled: false
      grpc:
        enabled: true
    healths:
      liveness:
        enabled: true
      readiness:
        enabled: true
    metrics:
      pprof:
        enabled: false
      prometheus:
        enabled: true
    full_shutdown_duration: 600s
    tls:
      enabled: false
  observability:
    jaeger:
      service_name: vald-discoverer
  resources:
    requests:
      cpu: 200m
      memory: 65Mi
    limits:
      cpu: 600m
      memory: 200Mi
  discoverer:
    name: ""
    namespace: _MY_POD_NAMESPACE_
    cache_sync_duration: 3s
  clusterRole:
    enabled: true
    name: discoverer
  clusterRoleBinding:
    enabled: true
    name: discoverer
  serviceAccount:
    enabled: true
    name: vald

compressor:
  version: v0.0.0
  name: vald-manager-compressor
  kind: Deployment
  # kind: DaemonSet
  serviceType: ClusterIP
  # externalTrafficPolicy: Cluster
  progressDeadlineSeconds: 600
  minReplicas: 3
  maxReplicas: 15
  maxUnavailable: 50%
  revisionHistoryLimit: 2
  terminationGracePeriodSeconds: 30
  hpa:
    enabled: true
    targetCPUUtilizationPercentage: 80
  image:
    repository: vdaas/vald-manager-compressor
    # tag: nightly
    pullPolicy: Always
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%
  initContainers:
    - type: wait-for
      name: wait-for-manager-backup
      target: manager-backup
      image: busybox
      sleepDuration: 2
  server_config:
    prefix: manager-compressor
    servers:
      rest:
        enabled: false
      grpc:
        enabled: true
    healths:
      liveness:
        enabled: true
      readiness:
        enabled: true
    metrics:
      pprof:
        enabled: false
      prometheus:
        enabled: true
    full_shutdown_duration: 600s
    tls:
      enabled: false
  observability:
    jaeger:
      service_name: vald-manager-compressor
  resources:
    requests:
      cpu: 300m
      memory: 50Mi
    limits:
      cpu: 800m
      memory: 500Mi
  backup:
    client: {}
  compress:
    compress_algorithm: zstd
    compression_level: 10
    concurrent_limit: 10
    buffer: 100

backupManager:
  version: v0.0.0
  name: vald-manager-backup
  kind: Deployment
  # kind: DaemonSet
  serviceType: ClusterIP
  # externalTrafficPolicy: Cluster
  progressDeadlineSeconds: 600
  minReplicas: 3
  maxReplicas: 15
  maxUnavailable: 50%
  revisionHistoryLimit: 2
  terminationGracePeriodSeconds: 30
  hpa:
    enabled: true
    targetCPUUtilizationPercentage: 80
  image:
    repository: vdaas/vald-manager-backup-mysql
    # repository: vdaas/vald-manager-backup-cassandra
    # tag: nightly
    pullPolicy: Always
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%
  initContainers:
    - type: wait-for-mysql
      name: wait-for-mysql
      image: mysql:latest
      mysql:
        hosts:
          - mysql.default.svc.cluster.local
        options:
          - "-uroot"
          - "-p${MYSQL_PASSWORD}"
      sleepDuration: 2
      env:
      - name: MYSQL_PASSWORD
        valueFrom:
          secretKeyRef:
            name: mysql-secret
            key: password
    # - type: wait-for-cassandra
    #   name: wait-for-cassandra
    #   image: cassandra:latest
    #   cassandra:
    #     hosts:
    #       - cassandra-0.cassandra.default.svc.cluster.local
    #       - cassandra-1.cassandra.default.svc.cluster.local
    #       - cassandra-2.cassandra.default.svc.cluster.local
    #     options:
    #       - "-uroot"
    #       - "-p${CASSANDRA_PASSWORD}"
    #   sleepDuration: 2
    #   env:
    #   - name: CASSANDRA_PASSWORD
    #     valueFrom:
    #       secretKeyRef:
    #         name: cassandra-secret
    #         key: password
    # - type: wait-for-cassandra
    #   name: wait-for-scylla
    #   image: cassandra:latest
    #   cassandra:
    #     hosts:
    #       - scylla-0.scylla.default.svc.cluster.local
    #       - scylla-1.scylla.default.svc.cluster.local
    #       - scylla-2.scylla.default.svc.cluster.local
    #   sleepDuration: 2
  env:
    - name: MYSQL_PASSWORD
      valueFrom:
        secretKeyRef:
          name: mysql-secret
          key: password
    # - name: CASSANDRA_PASSWORD
    #   valueFrom:
    #     secretKeyRef:
    #       name: cassandra-secret
    #       key: password
  server_config:
    prefix: backup-manager
    servers:
      rest:
        enabled: false
      grpc:
        enabled: true
    healths:
      liveness:
        enabled: true
      readiness:
        enabled: true
    metrics:
      pprof:
        enabled: false
      prometheus:
        enabled: true
    full_shutdown_duration: 600s
    tls:
      enabled: false
  observability:
    jaeger:
      service_name: vald-manager-backup
  resources:
    requests:
      cpu: 100m
      memory: 50Mi
    limits:
      cpu: 500m
      memory: 150Mi
  mysql:
    enabled: true
    config:
      db: mysql
      host: mysql.default.svc.cluster.local
      port: 3306
      user: root
      pass: _MYSQL_PASSWORD_
      name: vald
      conn_max_life_time: 30s
      max_open_conns: 100
      max_idle_conns: 100
      tls:
        enabled: false
        cert: /path/to/cert
        key: /path/to/key
        ca: /path/to/ca
      tcp:
        dns:
          cache_enabled: true
          refresh_duration: 1h
          cache_expiration: 24h
        dialer:
          timeout: 5s
          keep_alive: 5m
          dual_stack_enabled: false
        tls:
          enabled: false
          cert: /path/to/cert
          key: /path/to/key
          ca: /path/to/ca
  cassandra:
    enabled: false
    config:
      hosts:
        - cassandra-0.cassandra.default.svc.cluster.local
        - cassandra-1.cassandra.default.svc.cluster.local
        - cassandra-2.cassandra.default.svc.cluster.local
        # - scylla-0.scylla.default.svc.cluster.local
        # - scylla-1.scylla.default.svc.cluster.local
        # - scylla-2.scylla.default.svc.cluster.local
      cql_version: 3.0.0
      proto_version: 0
      timeout: 600ms
      connect_timeout: 600ms
      port: 9042
      keyspace: vald
      num_conns: 2
      consistency:  quorum
      username: root
      password: _CASSANDRA_PASSWORD_
      retry_policy:
        num_retries: 3
        min_duration: 1s
        max_duration: 30s
      reconnection_policy:
        max_retries: 3
        initial_interval: 1m
      socket_keepalive: 0s
      max_prepared_stmts: 1000
      max_routing_key_info: 1000
      page_size: 5000
      tls:
        enabled: false
        cert: /path/to/cert
        key: /path/to/key
        ca: /path/to/ca
      tcp:
        dns:
          cache_enabled: true
          refresh_duration: 5m
          cache_expiration: 24h
        dialer:
          timeout: 30s
          keep_alive: 10m
          dual_stack_enabled: false
      enable_host_verification: false
      default_timestamp: true
      reconnect_interval: 1m
      max_wait_schema_agreement: 1m
      ignore_peer_addr: false
      disable_initial_host_lookup: false
      disable_node_status_events: false
      disable_topology_events: false
      disable_skip_metadata: false
      default_idempotence: false
      write_coalesce_wait_time: 200ms
      meta_table: meta_vector
      pool_config:
        data_center: ""
        dc_aware_routing: false
        non_local_replicas_fallback: false
        shuffle_replicas: false

indexManager:
  version: v0.0.0
  name: vald-manager-index
  kind: Deployment
  # kind: DaemonSet
  serviceType: ClusterIP
  # externalTrafficPolicy: Cluster
  progressDeadlineSeconds: 600
  replicas: 1
  maxUnavailable: 50%
  revisionHistoryLimit: 2
  terminationGracePeriodSeconds: 30
  image:
    repository: vdaas/vald-manager-index
    # tag: nightly
    pullPolicy: Always
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%
  initContainers:
    - type: wait-for
      name: wait-for-agent
      target: agent
      image: busybox
      sleepDuration: 2
  env:
    # - name: MY_NODE_NAME
    #   valueFrom:
    #     fieldRef:
    #       fieldPath: spec.nodeName
    - name: MY_POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
  server_config:
    prefix: index-manager
    servers:
      rest:
        enabled: false
      grpc:
        enabled: true
    healths:
      liveness:
        enabled: true
      readiness:
        enabled: true
    metrics:
      pprof:
        enabled: false
      prometheus:
        enabled: true
    full_shutdown_duration: 600s
    tls:
      enabled: false
  observability:
    jaeger:
      service_name: vald-manager-index
  resources:
    requests:
      cpu: 200m
      memory: 80Mi
    limits:
      cpu: 1
      memory: 500Mi
  indexer:
    agent_namespace: _MY_POD_NAMESPACE_
    # node_name: _MY_NODE_NAME_
    concurrency: 1
    auto_index_duration_limit: 30m
    auto_index_check_duration: 1m
    auto_index_length: 100
    discoverer:
      duration: 500ms
      discover_client: {}
      agent_client:
        dial_option:
          tcp:
            dialer:
              keep_alive: 15m

meta:
  version: v0.0.0
  name: vald-meta
  kind: Deployment
  # kind: DaemonSet
  serviceType: ClusterIP
  # externalTrafficPolicy: Cluster
  progressDeadlineSeconds: 600
  minReplicas: 2
  maxReplicas: 10
  maxUnavailable: 50%
  revisionHistoryLimit: 2
  terminationGracePeriodSeconds: 30
  hpa:
    enabled: true
    targetCPUUtilizationPercentage: 80
  image:
    repository: vdaas/vald-meta-redis
    # repository: vdaas/vald-meta-cassandra
    # tag: nightly
    pullPolicy: Always
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%
  initContainers:
    - type: wait-for-redis
      name: wait-for-redis
      image: redis:latest
      redis:
        hosts:
          - redis.default.svc.cluster.local
        options:
          - "-a ${REDIS_PASSWORD}"
      sleepDuration: 2
      env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
    # - type: wait-for-cassandra
    #   name: wait-for-cassandra
    #   image: cassandra:latest
    #   cassandra:
    #     hosts:
    #       - cassandra-0.cassandra.default.svc.cluster.local
    #       - cassandra-1.cassandra.default.svc.cluster.local
    #       - cassandra-2.cassandra.default.svc.cluster.local
    #     options:
    #       - "-uroot"
    #       - "-p${CASSANDRA_PASSWORD}"
    #   sleepDuration: 2
    #   env:
    #   - name: CASSANDRA_PASSWORD
    #     valueFrom:
    #       secretKeyRef:
    #         name: cassandra-secret
    #         key: password
    # - type: wait-for-cassandra
    #   name: wait-for-scylla
    #   image: cassandra:latest
    #   cassandra:
    #     hosts:
    #       - scylla-0.scylla.default.svc.cluster.local
    #       - scylla-1.scylla.default.svc.cluster.local
    #       - scylla-2.scylla.default.svc.cluster.local
    #   sleepDuration: 2
  env:
    - name: REDIS_PASSWORD
      valueFrom:
        secretKeyRef:
          name: redis-secret
          key: password
    # - name: CASSANDRA_PASSWORD
    #   valueFrom:
    #     secretKeyRef:
    #       name: cassandra-secret
    #       key: password
  server_config:
    prefix: meta
    servers:
      rest:
        enabled: false
      grpc:
        enabled: true
    healths:
      liveness:
        enabled: true
      readiness:
        enabled: true
    metrics:
      pprof:
        enabled: false
      prometheus:
        enabled: true
    full_shutdown_duration: 600s
    tls:
      enabled: false
  observability:
    jaeger:
      service_name: vald-meta
  resources:
    requests:
      cpu: 100m
      memory: 40Mi
    limits:
      cpu: 300m
      memory: 100Mi
  redis:
    enabled: true
    config:
      addrs:
        - redis.default.svc.cluster.local:6379
      db: 0
      dial_timeout: 5s
      idle_check_frequency: 1m
      idle_timeout: 5m
      key_pref: ""
      max_conn_age: 0s
      max_redirects: 3
      max_retries: 0
      max_retry_backoff: 512ms
      min_idle_conns: 0
      min_retry_backoff: 8ms
      password: _REDIS_PASSWORD_
      pool_size: 10
      pool_timeout: 4s
      read_only: false
      read_timeout: 3s
      write_timeout: 3s
      route_by_latency: false
      route_randomly: true
      tls:
        enabled: false
      tcp:
        dns:
          cache_enabled: true
          refresh_duration: 1h
          cache_expiration: 24h
        dialer:
          timeout: 5s
          keep_alive: 5m
          dual_stack_enabled: false
        tls:
          enabled: false
      kv_prefix: ""
      vk_prefix: ""
      prefix_delimiter: ""
  cassandra:
    enabled: false
    config:
      hosts:
        - cassandra-0.cassandra.default.svc.cluster.local
        - cassandra-1.cassandra.default.svc.cluster.local
        - cassandra-2.cassandra.default.svc.cluster.local
        # - scylla-0.scylla.default.svc.cluster.local
        # - scylla-1.scylla.default.svc.cluster.local
        # - scylla-2.scylla.default.svc.cluster.local
      cql_version: 3.0.0
      proto_version: 0
      timeout: 600ms
      connect_timeout: 600ms
      port: 9042
      keyspace: vald
      num_conns: 2
      consistency:  quorum
      username: root
      password: _CASSANDRA_PASSWORD_
      retry_policy:
        num_retries: 3
        min_duration: 1s
        max_duration: 30s
      reconnection_policy:
        max_retries: 3
        initial_interval: 1m
      socket_keepalive: 0s
      max_prepared_stmts: 1000
      max_routing_key_info: 1000
      page_size: 5000
      tls:
        enabled: false
        cert: /path/to/cert
        key: /path/to/key
        ca: /path/to/ca
      tcp:
        dns:
          cache_enabled: true
          refresh_duration: 5m
          cache_expiration: 24h
        dialer:
          timeout: 30s
          keep_alive: 10m
          dual_stack_enabled: false
      enable_host_verification: false
      default_timestamp: true
      reconnect_interval: 1m
      max_wait_schema_agreement: 1m
      ignore_peer_addr: false
      disable_initial_host_lookup: false
      disable_node_status_events: false
      disable_topology_events: false
      disable_skip_metadata: false
      default_idempotence: false
      write_coalesce_wait_time: 200ms
      kv_table: kv
      vk_table: vk
      pool_config:
        data_center: ""
        dc_aware_routing: false
        non_local_replicas_fallback: false
        shuffle_replicas: false

initializer:
  mysql:
    enabled: false
    name: mysql-init
    image:
      repository: mysql
      tag: latest
      pullPolicy: Always
    restartPolicy: Never
    env:
      - name: MYSQL_HOST
        value: mysql.default.svc.cluster.local
      - name: MYSQL_USER
        value: root
      - name: MYSQL_PASSWORD
        valueFrom:
          secretKeyRef:
            name: mysql-secret
            key: password
    configmap:
      enabled: false
      name: mysql-config
      filename: ddl.sql
      schema: vald
    secret:
      enabled: false
      name: mysql-secret
      data:
        password: cGFzc3dvcmQ=
  redis:
    enabled: false
    name: redis-init
    image:
      repository: redis
      tag: latest
      pullPolicy: Always
    restartPolicy: Never
    env:
      - name: REDIS_HOST
        value: redis.default.svc.cluster.local
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            name: redis-secret
            key: password
    secret:
      enabled: false
      name: redis-secret
      data:
        password: cGFzc3dvcmQ=
  cassandra:
    enabled: false
    name: cassandra-init
    image:
      repository: cassandra
      tag: latest
      pullPolicy: Always
    restartPolicy: Never
    env:
      - name: CASSANDRA_HOST
        value: cassandra.default.svc.cluster.local
      - name: CASSANDRA_USER
        value: root
      - name: CASSANDRA_PASSWORD
        valueFrom:
          secretKeyRef:
            name: cassandra-secret
            key: password
    configmap:
      enabled: false
      name: cassandra-initdb
      filename: init.cql
      keyspace: vald
      replication_class: SimpleStrategy
      replication_factor: 3
      meta:
        enabled: true
        name:
          kv: kv
          vk: vk
      backup:
        enabled: true
        name: meta_vector
    secret:
      enabled: false
      name: cassandra-secret
      data:
        password: cGFzc3dvcmQ=
