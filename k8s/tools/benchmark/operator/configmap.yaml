---
#
# Copyright (C) 2019-2024 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: vald-benchmark-operator-config
  labels:
    app.kubernetes.io/name: vald-benchmark-operator
    helm.sh/chart: vald-benchmark-operator-v1.7.5
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.7.5
    app.kubernetes.io/component: benchmark-operator
data:
  config.yaml: |
    ---
    version: v0.0.0
    time_zone: ""
    logging:
      logger: "glg"
      level: "debug"
      format: "raw"
    server_config:
      servers:
        - name: grpc
          host: 0.0.0.0
          port: 8081
          mode: GRPC
          probe_wait_time: "3s"
          network: "tcp"
          socket_path: ""
          grpc:
            bidirectional_stream_concurrency: 20
            connection_timeout: ""
            max_receive_message_size: 0
            max_send_message_size: 0
            initial_window_size: 0
            initial_conn_window_size: 0
            keepalive:
              max_conn_idle: ""
              max_conn_age: ""
              max_conn_age_grace: ""
              time: "120s"
              timeout: "30s"
              min_time: "60s"
              permit_without_stream: true
            write_buffer_size: 0
            read_buffer_size: 0
            max_header_list_size: 0
            header_table_size: 0
            interceptors: []
            enable_reflection: true
          restart: true
      health_check_servers:
        - name: liveness
          host: 0.0.0.0
          port: 3000
          mode: ""
          probe_wait_time: "3s"
          network: "tcp"
          socket_path: ""
          http:
            shutdown_duration: "5s"
            handler_timeout: ""
            idle_timeout: ""
            read_header_timeout: ""
            read_timeout: ""
            write_timeout: ""
        - name: readiness
          host: 0.0.0.0
          port: 3001
          mode: ""
          probe_wait_time: "3s"
          network: "tcp"
          socket_path: ""
          http:
            shutdown_duration: "0s"
            handler_timeout: ""
            idle_timeout: ""
            read_header_timeout: ""
            read_timeout: ""
            write_timeout: ""
      metrics_servers:
      startup_strategy:
        - liveness
        - grpc
        - readiness
      full_shutdown_duration: 600s
      tls:
        enabled: false
        cert: "/path/to/cert"
        key: "/path/to/key"
        ca: "/path/to/ca"
        insecure_skip_verify: false
    observability:
      enabled: false
      otlp:
        collector_endpoint: ""
        trace_batch_timeout: "1s"
        trace_export_timeout: "1m"
        trace_max_export_batch_size: 1024
        trace_max_queue_size: 256
        metrics_export_interval: "1s"
        metrics_export_timeout: "1m"
        attribute:
          namespace: "_MY_POD_NAMESPACE_"
          pod_name: "_MY_POD_NAME_"
          node_name: "_MY_NODE_NAME_"
          service_name: "vald-benchmark-operator"
      metrics:
        enable_version_info: true
        version_info_labels:
          - vald_version
          - server_name
          - git_commit
          - build_time
          - go_version
          - go_os
          - go_arch
          - algorithm_info
        enable_memory: true
        enable_goroutine: true
        enable_cgo: true
      trace:
        enabled: false
        sampling_rate: 1
    job_image:
      image: "vdaas/vald-benchmark-job:v1.7.5"
      pullPolicy: Always
