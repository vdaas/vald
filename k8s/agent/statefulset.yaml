---
#
# Copyright (C) 2019-2020 Vdaas.org Vald team ( kpango, rinx, kmrmt )
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vald-agent-ngt
  labels:
    app: vald-agent-ngt
spec:
  serviceName: vald-agent-ngt
  podManagementPolicy: Parallel
  replicas: 5
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: vald-agent-ngt
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: vald-agent-ngt
      annotations:
        profefe.com/enable: "true"
        profefe.com/port: "6060"
        profefe.com/service: vald-agent-ngt
      # annotations:
      #   checksum/configmap: af2fe1ff78c47da8f88312d09290a86c0408fafabf2cd14389429fd5cd39cfab
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - vald-agent-ngt
      containers:
        - name: vald-agent-ngt
          image: "vdaas/vald-agent-ngt:nightly"
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /liveness
              port: liveness
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /readiness
              port: readiness
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 2
          ports:
            - name: liveness
              protocol: TCP
              containerPort: 3000
            - name: readiness
              protocol: TCP
              containerPort: 3001
            - name: grpc
              protocol: TCP
              containerPort: 8081
            - name: pprof
              protocol: TCP
              containerPort: 6060
          resources:
            requests:
              cpu: 100m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          env:
            null
          volumeMounts:
            - name: vald-agent-ngt-config
              mountPath: /etc/server/
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: vald-agent-ngt-config
          configMap:
            defaultMode: 420
            name: vald-agent-ngt-config
      priorityClassName: vald-agent-ngt-priority
status:
