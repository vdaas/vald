---
#
# Copyright (C) 2019-2020 Vdaas.org Vald team ( kpango, rinx, kmrmt )
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vald-manager-index
  labels:
    app: vald-manager-index
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v0.0.50
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: v0.0.50
    app.kubernetes.io/component: manager-index
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: vald-manager-index
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: vald-manager-index
        app.kubernetes.io/name: vald
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/component: manager-index
      annotations:
        checksum/configmap: 2e70ab3f7b3515da0f1d03e6b3b5e619a91905766396b270834ce02b4a95cd10
        profefe.com/enable: "true"
        profefe.com/port: "6060"
        profefe.com/service: vald-manager-index
    spec:
      initContainers:
        - name: wait-for-agent
          image: busybox
          command:
            - /bin/sh
            - -e
            - -c
            - |
              until [ "$(wget --server-response --spider --quiet http://vald-agent-ngt.default.svc.cluster.local:3001/readiness 2>&1 | awk 'NR==1{print $2}')" == "200" ]; do
                echo "waiting for agent to be ready..."
                sleep 2;
              done
        - name: wait-for-discoverer
          image: busybox
          command:
            - /bin/sh
            - -e
            - -c
            - |
              until [ "$(wget --server-response --spider --quiet http://vald-discoverer.default.svc.cluster.local:3001/readiness 2>&1 | awk 'NR==1{print $2}')" == "200" ]; do
                echo "waiting for discoverer to be ready..."
                sleep 2;
              done
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: []
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: []
          requiredDuringSchedulingIgnoredDuringExecution: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: []
          requiredDuringSchedulingIgnoredDuringExecution: []
      containers:
        - name: vald-manager-index
          image: "vdaas/vald-manager-index:nightly"
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /liveness
              port: liveness
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /readiness
              port: readiness
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 2
          ports:
            - name: liveness
              protocol: TCP
              containerPort: 3000
            - name: readiness
              protocol: TCP
              containerPort: 3001
            - name: grpc
              protocol: TCP
              containerPort: 8081
            - name: pprof
              protocol: TCP
              containerPort: 6060
          resources:
            limits:
              cpu: 1000m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 30Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          env:
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: vald-manager-index-config
              mountPath: /etc/server/
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: vald-manager-index-config
          name: vald-manager-index-config
      priorityClassName: vald-manager-index-priority
status:
