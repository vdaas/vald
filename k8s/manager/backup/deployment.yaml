---
#
# Copyright (C) 2019-2020 Vdaas.org Vald team ( kpango, rinx, kmrmt )
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vald-manager-backup
  labels:
    app: vald-manager-backup
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v0.0.55
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: v0.0.55
    app.kubernetes.io/component: manager-backup
spec:
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: vald-manager-backup
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: vald-manager-backup
        app.kubernetes.io/name: vald
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/component: manager-backup
      annotations:
        checksum/configmap: e8b157075f8e70b72213a4fd429604cd4e03625f9b6a521cf0142ee5bcf585c2
        profefe.com/enable: "true"
        profefe.com/port: "6060"
        profefe.com/service: vald-manager-backup
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          command:
            - /bin/sh
            - -e
            - -c
            - |
              hosts="mysql.default.svc.cluster.local"
              options="-uroot -p${MYSQL_PASSWORD}"
              for host in $hosts; do
                until [ "$(mysqladmin -h$host $options --show-warnings=false ping | grep alive | awk '{print $3}')" = "alive" ]; do
                  echo "waiting for $host to be ready..."
                  sleep 2;
                done
              done
          env:
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: mysql-secret
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: []
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: []
          requiredDuringSchedulingIgnoredDuringExecution: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: []
          requiredDuringSchedulingIgnoredDuringExecution: []
      containers:
        - name: vald-manager-backup
          image: "vdaas/vald-manager-backup-mysql:nightly"
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /liveness
              port: liveness
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /readiness
              port: readiness
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 2
          ports:
            - name: liveness
              protocol: TCP
              containerPort: 3000
            - name: readiness
              protocol: TCP
              containerPort: 3001
            - name: grpc
              protocol: TCP
              containerPort: 8081
            - name: pprof
              protocol: TCP
              containerPort: 6060
          resources:
            limits:
              cpu: 500m
              memory: 150Mi
            requests:
              cpu: 100m
              memory: 30Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          env:
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: mysql-secret
          volumeMounts:
            - name: vald-manager-backup-config
              mountPath: /etc/server/
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: vald-manager-backup-config
          configMap:
            defaultMode: 420
            name: vald-manager-backup-config
      priorityClassName: vald-manager-backup-priority
status:
