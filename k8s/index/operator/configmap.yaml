#
# Copyright (C) 2019-2025 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: vald-index-operator-config
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.7.16
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.7.16
    app.kubernetes.io/component: index-operator
data:
  config.yaml: "---\nversion: v0.0.0\ntime_zone: UTC\nlogging:\n  format: raw\n  level: debug\n  logger: glg\nserver_config:\n  servers:\n    - name: grpc\n      host: 0.0.0.0\n      port: 8081\n      grpc:\n        bidirectional_stream_concurrency: 20\n        connection_timeout: \"\"\n        enable_admin: true\n        enable_channelz: true\n        enable_reflection: true\n        header_table_size: 0\n        initial_conn_window_size: 2097152\n        initial_window_size: 1048576\n        interceptors:\n        - RecoverInterceptor\n        keepalive:\n          max_conn_age: \"\"\n          max_conn_age_grace: \"\"\n          max_conn_idle: \"\"\n          min_time: 10m\n          permit_without_stream: false\n          time: 3h\n          timeout: 60s\n        max_concurrent_streams: 0\n        max_header_list_size: 0\n        max_receive_message_size: 0\n        max_send_message_size: 0\n        num_stream_workers: 0\n        read_buffer_size: 0\n        shared_write_buffer: false\n        wait_for_handlers: true\n        write_buffer_size: 0\n      mode: GRPC\n      network: tcp\n      probe_wait_time: 3s\n      restart: true\n      socket_option:\n        ip_recover_destination_addr: false\n        ip_transparent: false\n        reuse_addr: true\n        reuse_port: true\n        tcp_cork: false\n        tcp_defer_accept: false\n        tcp_fast_open: false\n        tcp_no_delay: false\n        tcp_quick_ack: false\n      socket_path: \"\"\n  health_check_servers:\n    - name: liveness\n      host: 0.0.0.0\n      port: 3000\n      http:\n        handler_timeout: \"\"\n        http2:\n          enabled: false\n          handler_limit: 0\n          max_concurrent_streams: 0\n          max_decoder_header_table_size: 4096\n          max_encoder_header_table_size: 4096\n          max_read_frame_size: 0\n          max_upload_buffer_per_connection: 0\n          max_upload_buffer_per_stream: 0\n          permit_prohibited_cipher_suites: true\n        idle_timeout: \"\"\n        read_header_timeout: \"\"\n        read_timeout: \"\"\n        shutdown_duration: 5s\n        write_timeout: \"\"\n      mode: REST\n      network: tcp\n      probe_wait_time: 3s\n      restart: true\n      socket_option:\n        ip_recover_destination_addr: false\n        ip_transparent: false\n        reuse_addr: true\n        reuse_port: true\n        tcp_cork: false\n        tcp_defer_accept: false\n        tcp_fast_open: true\n        tcp_no_delay: true\n        tcp_quick_ack: true\n      socket_path: \"\"\n    - name: readiness\n      host: 0.0.0.0\n      port: 3001\n      http:\n        handler_timeout: \"\"\n        http2:\n          enabled: false\n          handler_limit: 0\n          max_concurrent_streams: 0\n          max_decoder_header_table_size: 4096\n          max_encoder_header_table_size: 4096\n          max_read_frame_size: 0\n          max_upload_buffer_per_connection: 0\n          max_upload_buffer_per_stream: 0\n          permit_prohibited_cipher_suites: true\n        idle_timeout: \"\"\n        read_header_timeout: \"\"\n        read_timeout: \"\"\n        shutdown_duration: 0s\n        write_timeout: \"\"\n      mode: REST\n      network: tcp\n      probe_wait_time: 3s\n      restart: true\n      socket_option:\n        ip_recover_destination_addr: false\n        ip_transparent: false\n        reuse_addr: true\n        reuse_port: true\n        tcp_cork: false\n        tcp_defer_accept: false\n        tcp_fast_open: true\n        tcp_no_delay: true\n        tcp_quick_ack: true\n      socket_path: \"\"\n  metrics_servers:\n    - name: pprof\n      host: 0.0.0.0\n      port: 6060\n      http:\n        handler_timeout: 5s\n        http2:\n          enabled: false\n          handler_limit: 0\n          max_concurrent_streams: 0\n          max_decoder_header_table_size: 4096\n          max_encoder_header_table_size: 4096\n          max_read_frame_size: 0\n          max_upload_buffer_per_connection: 0\n          max_upload_buffer_per_stream: 0\n          permit_prohibited_cipher_suites: true\n        idle_timeout: 2s\n        read_header_timeout: 1s\n        read_timeout: 1s\n        shutdown_duration: 5s\n        write_timeout: 1m\n      mode: REST\n      network: tcp\n      probe_wait_time: 3s\n      restart: true\n      socket_option:\n        ip_recover_destination_addr: false\n        ip_transparent: false\n        reuse_addr: true\n        reuse_port: true\n        tcp_cork: true\n        tcp_defer_accept: false\n        tcp_fast_open: false\n        tcp_no_delay: false\n        tcp_quick_ack: false\n      socket_path: \"\"\n  startup_strategy:\n    - liveness\n    - pprof\n    - grpc\n    - readiness\n  shutdown_strategy:\n    - readiness\n    - grpc\n    - pprof\n    - liveness\n  full_shutdown_duration: 600s\n  tls:\n    ca: /path/to/ca\n    cert: /path/to/cert\n    enabled: false\n    insecure_skip_verify: false\n    key: /path/to/key\nobservability:\n  enabled: false\n  otlp:\n    collector_endpoint: \"\"\n    trace_batch_timeout: \"1s\"\n    trace_export_timeout: \"1m\"\n    trace_max_export_batch_size: 1024\n    trace_max_queue_size: 256\n    metrics_export_interval: \"1s\"\n    metrics_export_timeout: \"1m\"\n    attribute:\n      namespace: \"_MY_POD_NAMESPACE_\"\n      pod_name: \"_MY_POD_NAME_\"\n      node_name: \"_MY_NODE_NAME_\"\n      service_name: \"vald-index-operator\"\n  metrics:\n    enable_cgo: true\n    enable_goroutine: true\n    enable_memory: true\n    enable_version_info: true\n    version_info_labels:\n    - vald_version\n    - server_name\n    - git_commit\n    - build_time\n    - go_version\n    - go_os\n    - go_arch\n    - algorithm_info\n  trace:\n    enabled: false\noperator:\n  namespace: _MY_POD_NAMESPACE_\n  agent_name: vald-agent\n  agent_namespace: \n  rotator_name: vald-readreplica-rotate\n  target_read_replica_id_annotations_key: vald.vdaas.org/target-read-replica-id\n  rotation_job_concurrency: 2\n  read_replica_enabled: false\n  read_replica_label_key: vald-readreplica-id\n  job_templates:\n    rotate:\n      apiVersion: batch/v1\n      kind: Job\n      metadata:\n        name: vald-readreplica-rotate\n        labels:\n          app: vald-readreplica-rotate\n          app.kubernetes.io/name: vald\n          helm.sh/chart: vald-v1.7.16\n          app.kubernetes.io/managed-by: Helm\n          app.kubernetes.io/instance: release-name\n          app.kubernetes.io/component: vald-readreplica-rotate\n          app.kubernetes.io/version: v1.7.16\n      spec:\n        ttlSecondsAfterFinished: 86400\n        template:\n          metadata:\n            labels:\n              app: vald-readreplica-rotate\n              app.kubernetes.io/name: vald\n              helm.sh/chart: vald-v1.7.16\n              app.kubernetes.io/managed-by: Helm\n              app.kubernetes.io/instance: release-name\n              app.kubernetes.io/component: vald-readreplica-rotate\n              app.kubernetes.io/version: v1.7.16\n            annotations:\n              pyroscope.io/scrape: \"true\"\n              pyroscope.io/application-name: vald-readreplica-rotate\n              pyroscope.io/profile-cpu-enabled: \"true\"\n              pyroscope.io/profile-mem-enabled: \"true\"\n              pyroscope.io/port: \"6060\"\n          spec:\n            containers:\n              - name: vald-readreplica-rotate\n                image: \"vdaas/vald-readreplica-rotate:nightly\"\n                imagePullPolicy: Always\n                volumeMounts:\n                  - name: vald-readreplica-rotate-config\n                    mountPath: /etc/server/\n                livenessProbe:\n                  failureThreshold: 2\n                  httpGet:\n                    path: /liveness\n                    port: liveness\n                    scheme: HTTP\n                  initialDelaySeconds: 5\n                  periodSeconds: 3\n                  successThreshold: 1\n                  timeoutSeconds: 2\n                readinessProbe:\n                  failureThreshold: 2\n                  httpGet:\n                    path: /readiness\n                    port: readiness\n                    scheme: HTTP\n                  initialDelaySeconds: 10\n                  periodSeconds: 3\n                  successThreshold: 1\n                  timeoutSeconds: 2\n                startupProbe:\n                  failureThreshold: 30\n                  httpGet:\n                    path: /liveness\n                    port: liveness\n                    scheme: HTTP\n                  initialDelaySeconds: 5\n                  periodSeconds: 5\n                  successThreshold: 1\n                  timeoutSeconds: 2\n                ports:\n                  - name: liveness\n                    protocol: TCP\n                    containerPort: 3000\n                  - name: readiness\n                    protocol: TCP\n                    containerPort: 3001\n                  - name: grpc\n                    protocol: TCP\n                    containerPort: 8081\n                  - name: pprof\n                    protocol: TCP\n                    containerPort: 6060\n                securityContext:\n                  allowPrivilegeEscalation: false\n                  capabilities:\n                    drop:\n                    - ALL\n                  privileged: false\n                  readOnlyRootFilesystem: true\n                  runAsGroup: 65532\n                  runAsNonRoot: true\n                  runAsUser: 65532\n                env:\n                  - name: MY_NODE_NAME\n                    valueFrom:\n                      fieldRef:\n                        fieldPath: spec.nodeName\n                  - name: MY_POD_NAME\n                    valueFrom:\n                      fieldRef:\n                        fieldPath: metadata.name\n                  - name: MY_POD_NAMESPACE\n                    valueFrom:\n                      fieldRef:\n                        fieldPath: metadata.namespace\n                  - name: TARGET_READREPLICA_ID_RELEASE_NAME_DEFAULT_VALD\n                    valueFrom:\n                      fieldRef:\n                        fieldPath: metadata.annotations['vald.vdaas.org/target-read-replica-id']\n            securityContext:\n              fsGroup: 65532\n              fsGroupChangePolicy: OnRootMismatch\n              runAsGroup: 65532\n              runAsNonRoot: true\n              runAsUser: 65532\n            restartPolicy: OnFailure\n            volumes:\n              - name: vald-readreplica-rotate-config\n                configMap:\n                  defaultMode: 420\n                  name: vald-readreplica-rotate-config\n            serviceAccountName: vald-readreplica-rotate\n    creation:\n      apiVersion: batch/v1\n      kind: Job\n      metadata:\n        name: vald-index-creation\n        labels:\n          app: vald-index-creation\n          app.kubernetes.io/name: vald\n          helm.sh/chart: vald-v1.7.16\n          app.kubernetes.io/managed-by: Helm\n          app.kubernetes.io/instance: release-name\n          app.kubernetes.io/component: vald-index-creation\n          app.kubernetes.io/version: v1.7.16\n      spec:\n        ttlSecondsAfterFinished: 86400\n        template:\n          metadata:\n            labels:\n              app: vald-index-creation\n              app.kubernetes.io/name: vald\n              helm.sh/chart: vald-v1.7.16\n              app.kubernetes.io/managed-by: Helm\n              app.kubernetes.io/instance: release-name\n              app.kubernetes.io/component: vald-index-creation\n              app.kubernetes.io/version: v1.7.16\n            annotations:\n              pyroscope.io/scrape: \"true\"\n              pyroscope.io/application-name: vald-index-creation\n              pyroscope.io/profile-cpu-enabled: \"true\"\n              pyroscope.io/profile-mem-enabled: \"true\"\n              pyroscope.io/port: \"6060\"\n          spec:\n            initContainers:\n              - name: wait-for-agent\n                image: busybox:stable\n                imagePullPolicy: Always\n                command:\n                  - /bin/sh\n                  - -e\n                  - -c\n                  - |\n                    until [ \"$(wget --server-response --spider --quiet http://vald-agent.default.svc.cluster.local:3001/readiness 2>&1 | awk 'NR==1{print $2}')\" == \"200\" ]; do\n                      echo \"waiting for agent to be ready...\"\n                      sleep 2;\n                    done\n              - name: wait-for-discoverer\n                image: busybox:stable\n                imagePullPolicy: Always\n                command:\n                  - /bin/sh\n                  - -e\n                  - -c\n                  - |\n                    until [ \"$(wget --server-response --spider --quiet http://vald-discoverer.default.svc.cluster.local:3001/readiness 2>&1 | awk 'NR==1{print $2}')\" == \"200\" ]; do\n                      echo \"waiting for discoverer to be ready...\"\n                      sleep 2;\n                    done\n            affinity:\n              nodeAffinity:\n                preferredDuringSchedulingIgnoredDuringExecution: []\n              podAffinity:\n                preferredDuringSchedulingIgnoredDuringExecution: []\n                requiredDuringSchedulingIgnoredDuringExecution: []\n              podAntiAffinity:\n                preferredDuringSchedulingIgnoredDuringExecution: []\n                requiredDuringSchedulingIgnoredDuringExecution: []\n            containers:\n              - name: vald-index-creation\n                image: \"vdaas/vald-index-creation:nightly\"\n                imagePullPolicy: Always\n                volumeMounts:\n                  - name: vald-index-creation-config\n                    mountPath: /etc/server/\n                livenessProbe:\n                  failureThreshold: 2\n                  httpGet:\n                    path: /liveness\n                    port: liveness\n                    scheme: HTTP\n                  initialDelaySeconds: 5\n                  periodSeconds: 3\n                  successThreshold: 1\n                  timeoutSeconds: 2\n                readinessProbe:\n                  failureThreshold: 2\n                  httpGet:\n                    path: /readiness\n                    port: readiness\n                    scheme: HTTP\n                  initialDelaySeconds: 10\n                  periodSeconds: 3\n                  successThreshold: 1\n                  timeoutSeconds: 2\n                startupProbe:\n                  failureThreshold: 30\n                  httpGet:\n                    path: /liveness\n                    port: liveness\n                    scheme: HTTP\n                  initialDelaySeconds: 5\n                  periodSeconds: 5\n                  successThreshold: 1\n                  timeoutSeconds: 2\n                ports:\n                  - name: liveness\n                    protocol: TCP\n                    containerPort: 3000\n                  - name: readiness\n                    protocol: TCP\n                    containerPort: 3001\n                  - name: grpc\n                    protocol: TCP\n                    containerPort: 8081\n                  - name: pprof\n                    protocol: TCP\n                    containerPort: 6060\n                env:\n                  - name: MY_NODE_NAME\n                    valueFrom:\n                      fieldRef:\n                        fieldPath: spec.nodeName\n                  - name: MY_POD_NAME\n                    valueFrom:\n                      fieldRef:\n                        fieldPath: metadata.name\n                  - name: MY_POD_NAMESPACE\n                    valueFrom:\n                      fieldRef:\n                        fieldPath: metadata.namespace\n            restartPolicy: OnFailure\n            volumes:\n              - name: vald-index-creation-config\n                configMap:\n                  defaultMode: 420\n                  name: vald-index-creation-config\n    save:\n      apiVersion: batch/v1\n      kind: Job\n      metadata:\n        name: vald-index-save\n        labels:\n          app: vald-index-save\n          app.kubernetes.io/name: vald\n          helm.sh/chart: vald-v1.7.16\n          app.kubernetes.io/managed-by: Helm\n          app.kubernetes.io/instance: release-name\n          app.kubernetes.io/component: vald-index-save\n          app.kubernetes.io/version: v1.7.16\n      spec:\n        ttlSecondsAfterFinished: 86400\n        template:\n          metadata:\n            labels:\n              app: vald-index-save\n              app.kubernetes.io/name: vald\n              helm.sh/chart: vald-v1.7.16\n              app.kubernetes.io/managed-by: Helm\n              app.kubernetes.io/instance: release-name\n              app.kubernetes.io/component: vald-index-save\n              app.kubernetes.io/version: v1.7.16\n            annotations:\n              pyroscope.io/scrape: \"true\"\n              pyroscope.io/application-name: vald-index-save\n              pyroscope.io/profile-cpu-enabled: \"true\"\n              pyroscope.io/profile-mem-enabled: \"true\"\n              pyroscope.io/port: \"6060\"\n          spec:\n            initContainers:\n              - name: wait-for-agent\n                image: busybox:stable\n                imagePullPolicy: Always\n                command:\n                  - /bin/sh\n                  - -e\n                  - -c\n                  - |\n                    until [ \"$(wget --server-response --spider --quiet http://vald-agent.default.svc.cluster.local:3001/readiness 2>&1 | awk 'NR==1{print $2}')\" == \"200\" ]; do\n                      echo \"waiting for agent to be ready...\"\n                      sleep 2;\n                    done\n              - name: wait-for-discoverer\n                image: busybox:stable\n                imagePullPolicy: Always\n                command:\n                  - /bin/sh\n                  - -e\n                  - -c\n                  - |\n                    until [ \"$(wget --server-response --spider --quiet http://vald-discoverer.default.svc.cluster.local:3001/readiness 2>&1 | awk 'NR==1{print $2}')\" == \"200\" ]; do\n                      echo \"waiting for discoverer to be ready...\"\n                      sleep 2;\n                    done\n            affinity:\n              nodeAffinity:\n                preferredDuringSchedulingIgnoredDuringExecution: []\n              podAffinity:\n                preferredDuringSchedulingIgnoredDuringExecution: []\n                requiredDuringSchedulingIgnoredDuringExecution: []\n              podAntiAffinity:\n                preferredDuringSchedulingIgnoredDuringExecution: []\n                requiredDuringSchedulingIgnoredDuringExecution: []\n            containers:\n              - name: vald-index-save\n                image: \"vdaas/vald-index-save:nightly\"\n                imagePullPolicy: Always\n                volumeMounts:\n                  - name: vald-index-save-config\n                    mountPath: /etc/server/\n                livenessProbe:\n                  failureThreshold: 2\n                  httpGet:\n                    path: /liveness\n                    port: liveness\n                    scheme: HTTP\n                  initialDelaySeconds: 5\n                  periodSeconds: 3\n                  successThreshold: 1\n                  timeoutSeconds: 2\n                readinessProbe:\n                  failureThreshold: 2\n                  httpGet:\n                    path: /readiness\n                    port: readiness\n                    scheme: HTTP\n                  initialDelaySeconds: 10\n                  periodSeconds: 3\n                  successThreshold: 1\n                  timeoutSeconds: 2\n                startupProbe:\n                  failureThreshold: 30\n                  httpGet:\n                    path: /liveness\n                    port: liveness\n                    scheme: HTTP\n                  initialDelaySeconds: 5\n                  periodSeconds: 5\n                  successThreshold: 1\n                  timeoutSeconds: 2\n                ports:\n                  - name: liveness\n                    protocol: TCP\n                    containerPort: 3000\n                  - name: readiness\n                    protocol: TCP\n                    containerPort: 3001\n                  - name: grpc\n                    protocol: TCP\n                    containerPort: 8081\n                  - name: pprof\n                    protocol: TCP\n                    containerPort: 6060\n                env:\n                  - name: MY_NODE_NAME\n                    valueFrom:\n                      fieldRef:\n                        fieldPath: spec.nodeName\n                  - name: MY_POD_NAME\n                    valueFrom:\n                      fieldRef:\n                        fieldPath: metadata.name\n                  - name: MY_POD_NAMESPACE\n                    valueFrom:\n                      fieldRef:\n                        fieldPath: metadata.namespace\n            restartPolicy: OnFailure\n            volumes:\n              - name: vald-index-save-config\n                configMap:\n                  defaultMode: 420\n                  name: vald-index-save-config\n    correction:\n      apiVersion: batch/v1\n      kind: Job\n      metadata:\n        name: vald-index-correction\n        labels:\n          app: vald-index-correction\n          app.kubernetes.io/name: vald\n          helm.sh/chart: vald-v1.7.16\n          app.kubernetes.io/managed-by: Helm\n          app.kubernetes.io/instance: release-name\n          app.kubernetes.io/component: vald-index-correction\n          app.kubernetes.io/version: v1.7.16\n      spec:\n        ttlSecondsAfterFinished: 86400\n        template:\n          metadata:\n            labels:\n              app: vald-index-correction\n              app.kubernetes.io/name: vald\n              helm.sh/chart: vald-v1.7.16\n              app.kubernetes.io/managed-by: Helm\n              app.kubernetes.io/instance: release-name\n              app.kubernetes.io/component: vald-index-correction\n              app.kubernetes.io/version: v1.7.16\n            annotations:\n              pyroscope.io/scrape: \"true\"\n              pyroscope.io/application-name: vald-index-correction\n              pyroscope.io/profile-cpu-enabled: \"true\"\n              pyroscope.io/profile-mem-enabled: \"true\"\n              pyroscope.io/port: \"6060\"\n          spec:\n            initContainers:\n              - name: wait-for-agent\n                image: busybox:stable\n                imagePullPolicy: Always\n                command:\n                  - /bin/sh\n                  - -e\n                  - -c\n                  - |\n                    until [ \"$(wget --server-response --spider --quiet http://vald-agent.default.svc.cluster.local:3001/readiness 2>&1 | awk 'NR==1{print $2}')\" == \"200\" ]; do\n                      echo \"waiting for agent to be ready...\"\n                      sleep 2;\n                    done\n              - name: wait-for-discoverer\n                image: busybox:stable\n                imagePullPolicy: Always\n                command:\n                  - /bin/sh\n                  - -e\n                  - -c\n                  - |\n                    until [ \"$(wget --server-response --spider --quiet http://vald-discoverer.default.svc.cluster.local:3001/readiness 2>&1 | awk 'NR==1{print $2}')\" == \"200\" ]; do\n                      echo \"waiting for discoverer to be ready...\"\n                      sleep 2;\n                    done\n            affinity:\n              nodeAffinity:\n                preferredDuringSchedulingIgnoredDuringExecution: []\n              podAffinity:\n                preferredDuringSchedulingIgnoredDuringExecution: []\n                requiredDuringSchedulingIgnoredDuringExecution: []\n              podAntiAffinity:\n                preferredDuringSchedulingIgnoredDuringExecution: []\n                requiredDuringSchedulingIgnoredDuringExecution: []\n            containers:\n              - name: vald-index-correction\n                image: \"vdaas/vald-index-correction:nightly\"\n                imagePullPolicy: Always\n                volumeMounts:\n                  - name: vald-index-correction-config\n                    mountPath: /etc/server/\n                livenessProbe:\n                  failureThreshold: 2\n                  httpGet:\n                    path: /liveness\n                    port: liveness\n                    scheme: HTTP\n                  initialDelaySeconds: 5\n                  periodSeconds: 3\n                  successThreshold: 1\n                  timeoutSeconds: 2\n                readinessProbe:\n                  failureThreshold: 2\n                  httpGet:\n                    path: /readiness\n                    port: readiness\n                    scheme: HTTP\n                  initialDelaySeconds: 10\n                  periodSeconds: 3\n                  successThreshold: 1\n                  timeoutSeconds: 2\n                startupProbe:\n                  failureThreshold: 30\n                  httpGet:\n                    path: /liveness\n                    port: liveness\n                    scheme: HTTP\n                  initialDelaySeconds: 5\n                  periodSeconds: 5\n                  successThreshold: 1\n                  timeoutSeconds: 2\n                ports:\n                  - name: liveness\n                    protocol: TCP\n                    containerPort: 3000\n                  - name: readiness\n                    protocol: TCP\n                    containerPort: 3001\n                  - name: grpc\n                    protocol: TCP\n                    containerPort: 8081\n                  - name: pprof\n                    protocol: TCP\n                    containerPort: 6060\n                env:\n                  - name: MY_NODE_NAME\n                    valueFrom:\n                      fieldRef:\n                        fieldPath: spec.nodeName\n                  - name: MY_POD_NAME\n                    valueFrom:\n                      fieldRef:\n                        fieldPath: metadata.name\n                  - name: MY_POD_NAMESPACE\n                    valueFrom:\n                      fieldRef:\n                        fieldPath: metadata.namespace\n            restartPolicy: OnFailure\n            volumes:\n              - name: vald-index-correction-config\n                configMap:\n                  defaultMode: 420\n                  name: vald-index-correction-config\n"
