---
#
# Copyright (C) 2019-2020 Vdaas.org Vald team ( kpango, rinx, kmrmt )
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vald-meta
  labels:
    app: vald-meta
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: vald-meta
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: vald-meta
    spec:
      initContainers:
        
        - name: wait-for-redis
          image: redis:latest
          command:
            - /bin/sh
            - -c
            - >
              set -x;
              until [ "$(redis-cli -h redis.default.svc.cluster.local -a ${REDIS_PASSWORD} ping)" = "PONG" ]; do
                echo "waiting for redis.default.svc.cluster.local to be ready..."
                sleep 2;
              done
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: redis-secret
      containers:
        - name: vald-meta
          image: "vdaas/vald-meta-redis:nightly"
          imagePullPolicy: Always
          
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /liveness
              port: liveness
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /readiness
              port: readiness
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 2
          ports:
            - name: liveness
              protocol: TCP
              containerPort: 3000
            - name: readiness
              protocol: TCP
              containerPort: 3001
            - name: grpc
              protocol: TCP
              containerPort: 8081
          resources:
            limits:
              cpu: 500m
            requests:
              cpu: 200m
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: redis-secret
          volumeMounts:
            - name: vald-meta-config
              mountPath: /etc/server/
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: vald-meta-config
        configMap:
          defaultMode: 420
          name: vald-meta-config
status:
