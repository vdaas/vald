#
# Copyright (C) 2019-2022 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# @schema {"name": "dataset", "type": "object"}
# dataset -- dataset information
dataset:
  # @schema {"name": "dataset.name", "type": "string" }
  # dataset.name -- the name of dataset
  name: "fashion-mnist"
  # @schema {"name": "dataset.indexes", "type": "integer"}
  # dataset.indexes -- the amount of indexes
  indexes: 10000
  # @schema {"name": "dataset.group", "type": "string"}
  # dataset.group -- the hdf5 group name of dataset
  group: "train"
  # @schema {"name": "dataset.range", "type": "object"}
  # dataset.range -- the data range of indexes
  range:
    # @schema {"name": "dataset.range.start", "type": "integer"}
    # dataset.range.start -- start index number
    start: 0
    # @schema {"name": "dataset.range.end", "type": "integer"}
    # dataset.range.end -- end index number
    end: 10000

# @schema {"name": "jobs", "type": "array", "items": {"type": "object"}}
# jobs -- benchmark jobs
jobs:
  # @schema {"name": "jobs.items.dataset", "type": "object"}
  - dataset:
      name: "fashion-mnist"
      indexes: 10000
      group: "train"
      range:
        start: 0
        end: 10000
    dimension: 784
    epsilon: 0.1
    iter: 1
    job_type: "insert"
    min_num: 1
    num: 10
    radius: 1
    repetition: 1
    replica: 1
    rules: []
    target:
      host: "localhost"
      port: "8081"
    timeout: "1m"
    gateway_client: {}

# @schema {"name": "target", "type": "array", "items": {"type": "object"}}
# target -- target cluster host&port
target:
  - host: "localhost"
    port: 8081

