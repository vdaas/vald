#
# Copyright (C) 2019-2024 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.name }}
    app.kubernetes.io/name: {{ include "vald.name" . }}
    helm.sh/chart: {{ include "vald.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/component: benchmark-operator
  {{- if .Values.annotations }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      name: {{ .Values.name }}
  template:
    metadata:
      labels:
        name: {{ .Values.name }}
        app.kubernetes.io/name: {{ include "vald.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: benchmark-operator
      {{- with .Values.podAnnotations }}
      annotations:
        {{- if .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.server_config.metrics.pprof.enabeld }}
        pyroscope.io/scrape: "true"
        pyroscope.io/application-name: {{ .Values.name }}
        pyroscope.io/profile-cpu-enabled: "true"
        pyroscope.io/profile-mem-enabled: "true"
        pyroscope.io/port: "{{ .Values.server_config.metrics.pprof.port }}"
        {{- end}}
      {{- end }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
        - name: {{ .Values.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- $liveness := .Values.server_config.healths.liveness }}
          {{- if $liveness.enabled }}
          livenessProbe:
            failureThreshold: {{ $liveness.livenessProbe.failureThreshold }}
            httpGet:
              path: {{ $liveness.livenessProbe.httpGet.path }}
              port: {{ $liveness.livenessProbe.httpGet.port }}
              scheme: {{ $liveness.livenessProbe.httpGet.scheme }}
            initialDelaySeconds: {{ $liveness.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ $liveness.livenessProbe.periodSeconds }}
            successThreshold: {{ $liveness.livenessProbe.successThreshold }}
            timeoutSeconds: {{ $liveness.livenessProbe.timeoutSeconds }}
          {{- end}}
          {{- $readiness := .Values.server_config.healths.readiness }}
          {{- if $readiness.enabled }}
          readinessProbe:
            failureThreshold: {{ $readiness.readinessProbe.failureThreshold }}
            httpGet:
              path: {{ $readiness.readinessProbe.httpGet.path }}
              port: {{ $readiness.readinessProbe.httpGet.port }}
              scheme: {{ $readiness.readinessProbe.httpGet.scheme }}
            initialDelaySeconds: {{ $readiness.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ $readiness.readinessProbe.periodSeconds }}
            successThreshold: {{ $readiness.readinessProbe.successThreshold }}
            timeoutSeconds: {{ $readiness.readinessProbe.timeoutSeconds }}
          {{- end}}
          {{- $startup := .Values.server_config.healths.startup }}
          {{- if $startup.enabled }}
          startupProbe:
            failureThreshold: {{ $startup.startupProbe.failureThreshold }}
            httpGet:
              path: {{ $startup.startupProbe.httpGet.path }}
              port: {{ $startup.startupProbe.httpGet.port }}
              scheme: {{ $startup.startupProbe.httpGet.scheme }}
            initialDelaySeconds: {{ $startup.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ $startup.startupProbe.periodSeconds }}
            successThreshold: {{ $startup.startupProbe.successThreshold }}
            timeoutSeconds: {{ $startup.startupProbe.timeoutSeconds }}
          {{- end}}
          ports:
            {{- if $liveness.enabled }}
            - name: liveness
              protocol: TCP
              containerPort: {{ $liveness.port }}
            {{- end}}
            {{- if $readiness.enabled }}
            - name: readiness
              protocol: TCP
              containerPort: {{ $readiness.port }}
            {{- end}}
            - name: grpc
              protocol: TCP
              containerPort: {{ default 8081 .Values.grpc }}
            - name: pprof
              protocol: TCP
              containerPort: {{ default 6060 .Values.pprof }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: {{ .Values.name }}-config
              mountPath: /etc/server
          env:
            - name: JOB_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      restartPolicy: Always
      volumes:
        - name: {{ .Values.name }}-config
          configMap:
            defaultMode: 420
            name: {{ .Values.name }}-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- if .Values.nodeName }}
      nodeName: {{ .Values.nodeName }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.podPriority }}
      {{- if .Values.podPriority.enabled }}
      priorityClassName: {{ .Release.Namespace }}-{{ .Values.name }}-priority
      {{- end }}
      {{- end }}
