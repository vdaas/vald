#
# Copyright (C) 2019-2020 Vdaas.org Vald team ( kpango, rinx, kmrmt )
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
{{- $gateway := .Values.gateway.filter -}}
{{- if $gateway.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $gateway.name }}-config
  labels:
    app.kubernetes.io/name: {{ include "vald.name" . }}
    helm.sh/chart: {{ include "vald.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/component: gateway-filter
data:
  config.yaml: |
    ---
    version: {{ $gateway.version }}
    time_zone: {{ default .Values.defaults.time_zone $gateway.time_zone }}
    logging:
      {{- $logging := dict "Values" $gateway.logging "default" .Values.defaults.logging }}
      {{- include "vald.logging" $logging | nindent 6 }}
    server_config:
      {{- $servers := dict "Values" $gateway.server_config "default" .Values.defaults.server_config }}
      {{- include "vald.servers" $servers | nindent 6 }}
    observability:
      {{- $observability := dict "Values" $gateway.observability "default" .Values.defaults.observability }}
      {{- include "vald.observability" $observability | nindent 6 }}
    client:
      {{- $client := dict "Values" $gateway.gateway_config.client "default" .Values.defaults.grpc.client }}
      {{- include "vald.grpc.client" $client | nindent 6 }}
    ingress_filter:
      client:
        {{- $ingressFilterClient := dict "Values" $gateway.gateway_config.ingress_filter.client "default" .Values.defaults.grpc.client }}
        {{- include "vald.grpc.client" $ingressFilterClient | nindent 8 }}
      {{- if $gateway.gateway_config.ingress_filter.search }}
      search:
        {{- toYaml $gateway.gateway_config.ingress_filter.search | nindent 8 }}
      {{- else }}
      search: []
      {{- end }}
      {{- if $gateway.gateway_config.ingress_filter.insert }}
      insert:
        {{- toYaml $gateway.gateway_config.ingress_filter.insert | nindent 8 }}
      {{- else }}
      insert: []
      {{- end }}
      {{- if $gateway.gateway_config.ingress_filter.update }}
      update:
        {{- toYaml $gateway.gateway_config.ingress_filter.update | nindent 8 }}
      {{- else }}
      update: []
      {{- end }}
      {{- if $gateway.gateway_config.ingress_filter.upsert }}
      upsert:
        {{- toYaml $gateway.gateway_config.ingress_filter.upsert | nindent 8 }}
      {{- else }}
      upsert: []
      {{- end }}
    egress_filter:
      client:
        {{- $egressFilterClient := dict "Values" $gateway.gateway_config.egress_filter.client "default" .Values.defaults.grpc.client }}
        {{- include "vald.grpc.client" $egressFilterClient | nindent 8 }}
    gateway: {} # TODO
{{- end }}
