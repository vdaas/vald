#
# Copyright (C) 2019-2024 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
{{- $reflectionEnabled       := .Values.defaults.server_config.servers.grpc.server.grpc.enable_reflection -}}
{{- $filter                  := .Values.gateway.filter -}}
{{- $filterIngEnabled        := and $filter.enabled $filter.ingress.enabled -}}
{{- $filterReflectionEnabled := and $filterIngEnabled (default $reflectionEnabled $filter.server_config.servers.grpc.enable_reflection) -}}
{{- $mirror                  := .Values.gateway.mirror -}}
{{- $mirrorIngEnabled        := and $mirror.enabled $mirror.ingress.enabled -}}
{{- $lb                      := .Values.gateway.lb -}}
{{- $lbIngEnabled            := and $lb.enabled $lb.ingress.enabled -}}
{{- $lbReflectionEnabled     := and $lbIngEnabled (default $reflectionEnabled $lb.server_config.servers.grpc.enable_reflection) -}}
{{- $gateway                 := "" -}}
{{- $gatewayName             := "" -}}
{{- if or $filterIngEnabled $mirrorIngEnabled $lbIngEnabled }}
{{- if $filterIngEnabled }}
{{- $gateway = $filter -}}
{{- $gatewayName = "gateway-filter" }}
{{- else if $mirrorIngEnabled }}
{{- $gateway = $mirror -}}
{{- $gatewayName = "gateway-mirror" }}
{{- else }}
{{- $gateway = $lb -}}
{{- $gatewayName = "gateway-lb" }}
{{- end }}
{{- if (.Capabilities.APIVersions.Has "networking.k8s.io/v1") }}
apiVersion: networking.k8s.io/v1
{{- else }}
apiVersion: networking.k8s.io/v1alpha1
{{- end }}
kind: Ingress
metadata:
  annotations:
    {{- toYaml $gateway.ingress.annotations | nindent 4 }}
  labels:
    name: {{ $gateway.name }}-ingress
    app: {{ $gateway.name }}-ingress
    app.kubernetes.io/name: {{ include "vald.name" . }}
    helm.sh/chart: {{ include "vald.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/component: {{ $gatewayName }}
  name: {{ .Release.Name }}-ingress
spec:
  {{- if $gateway.ingress.defaultBackend.enabled }}
  defaultBackend:
    service:
      name: {{ $gateway.name }}
      {{- include "vald.ingressPort" (dict "Values" $gateway.ingress) | nindent 6 }}
  {{- end }}
  rules:
  - host: {{ $gateway.ingress.host }}
    http:
      paths:
      {{- if and $mirrorIngEnabled $filterIngEnabled $lb.enabled }}
      - path: "/vald.v1.Search/"
        backend:
          service:
            name: {{ $filter.name }}
            {{- include "vald.ingressPort" (dict "Values" $filter.ingress) | nindent 12 }}
        pathType: {{ $filter.ingress.pathType }}
      - path: "/vald.v1.Insert/"
        backend:
          service:
            name: {{ $filter.name }}
            {{- include "vald.ingressPort" (dict "Values" $filter.ingress) | nindent 12 }}
        pathType: {{ $filter.ingress.pathType }}
      # NOTE: Change backend service to mirror after UpdateTimestamp is implemented in mirror.
      - path: "/vald.v1.Update/UpdateTimestamp"
        backend:
          service:
            name: {{ $lb.name }}
            {{- include "vald.ingressPort" (dict "Values" $lb.ingress) | nindent 12 }}
        pathType: {{ $lb.ingress.pathType }}
      - path: "/vald.v1.Update/"
        backend:
          service:
            name: {{ $filter.name }}
            {{- include "vald.ingressPort" (dict "Values" $filter.ingress) | nindent 12 }}
        pathType: {{ $filter.ingress.pathType }}
      - path: "/vald.v1.Upsert/"
        backend:
          service:
            name: {{ $filter.name }}
            {{- include "vald.ingressPort" (dict "Values" $filter.ingress) | nindent 12 }}
        pathType: {{ $filter.ingress.pathType }}
      - path: "/vald.v1.Remove/"
        backend:
          service:
            name: {{ $mirror.name }}
            {{- include "vald.ingressPort" (dict "Values" $mirror.ingress) | nindent 12 }}
        pathType: {{ $mirror.ingress.pathType }}
      - path: "/vald.v1.Object/Exists"
        backend:
          service:
            name: {{ $lb.name }}
            {{- include "vald.ingressPort" (dict "Values" $lb.ingress) | nindent 12 }}
        pathType: {{ $lb.ingress.pathType }}
      - path: "/vald.v1.Object/GetTimestamp"
        backend:
          service:
            name: {{ $lb.name }}
            {{- include "vald.ingressPort" (dict "Values" $lb.ingress) | nindent 12 }}
        pathType: {{ $lb.ingress.pathType }}
      - path: "/vald.v1.Object/"
        backend:
          service:
            name: {{ $filter.name }}
            {{- include "vald.ingressPort" (dict "Values" $filter.ingress) | nindent 12 }}
        pathType: {{ $filter.ingress.pathType }}
      - path: "/vald.v1.Index/"
        backend:
          service:
            name: {{ $lb.name }}
            {{- include "vald.ingressPort" (dict "Values" $lb.ingress) | nindent 12 }}
        pathType: {{ $lb.ingress.pathType }}
      # NOTE: Change backend service to mirror after Flush is implemented in mirror.
      - path: "/vald.v1.Flush/"
        backend:
          service:
            name: {{ $lb.name }}
            {{- include "vald.ingressPort" (dict "Values" $lb.ingress) | nindent 12 }}
        pathType: {{ $lb.ingress.pathType }}
      - path: "/mirror.v1.Mirror/Register"
        backend:
          service:
            name: {{ $mirror.name }}
            {{- include "vald.ingressPort" (dict "Values" $mirror.ingress) | nindent 12 }}
        pathType: {{ $mirror.ingress.pathType }}
      - path: "/vald.v1.Filter/"
        backend:
          service:
            name: {{ $filter.name }}
            {{- include "vald.ingressPort" (dict "Values" $filter.ingress) | nindent 12 }}
        pathType: {{ $filter.ingress.pathType }}
      {{- else if and $filterIngEnabled $lb.enabled }}
      - path: "/vald.v1.Search/"
        backend:
          service:
            name: {{ $filter.name }}
            {{- include "vald.ingressPort" (dict "Values" $filter.ingress) | nindent 12 }}
        pathType: {{ $filter.ingress.pathType }}
      - path: "/vald.v1.Insert/"
        backend:
          service:
            name: {{ $filter.name }}
            {{- include "vald.ingressPort" (dict "Values" $filter.ingress) | nindent 12 }}
        pathType: {{ $filter.ingress.pathType }}
      - path: "/vald.v1.Update/"
        backend:
          service:
            name: {{ $filter.name }}
            {{- include "vald.ingressPort" (dict "Values" $filter.ingress) | nindent 12 }}
        pathType: {{ $filter.ingress.pathType }}
      - path: "/vald.v1.Upsert/"
        backend:
          service:
            name: {{ $filter.name }}
            {{- include "vald.ingressPort" (dict "Values" $filter.ingress) | nindent 12 }}
        pathType: {{ $filter.ingress.pathType }}
      - path: "/vald.v1.Remove/"
        backend:
          service:
            name: {{ $lb.name }}
            {{- include "vald.ingressPort" (dict "Values" $lb.ingress) | nindent 12 }}
        pathType: {{ $lb.ingress.pathType }}
      - path: "/vald.v1.Index/"
        backend:
          service:
            name: {{ $lb.name }}
            {{- include "vald.ingressPort" (dict "Values" $lb.ingress) | nindent 12 }}
        pathType: {{ $lb.ingress.pathType }}
      - path: "/vald.v1.Object/Exists"
        backend:
          service:
            name: {{ $lb.name }}
            {{- include "vald.ingressPort" (dict "Values" $lb.ingress) | nindent 12 }}
        pathType: {{ $lb.ingress.pathType }}
      - path: "/vald.v1.Object/GetTimestamp"
        backend:
          service:
            name: {{ $lb.name }}
            {{- include "vald.ingressPort" (dict "Values" $lb.ingress) | nindent 12 }}
        pathType: {{ $lb.ingress.pathType }}
      - path: "/vald.v1.Object/"
        backend:
          service:
            name: {{ $filter.name }}
            {{- include "vald.ingressPort" (dict "Values" $filter.ingress) | nindent 12 }}
        pathType: {{ $filter.ingress.pathType }}
      - path: "/vald.v1.Flush/"
        backend:
          service:
            name: {{ $lb.name }}
            {{- include "vald.ingressPort" (dict "Values" $lb.ingress) | nindent 12 }}
        pathType: {{ $lb.ingress.pathType }}
      - path: "/vald.v1.Filter/"
        backend:
          service:
            name: {{ $filter.name }}
            {{- include "vald.ingressPort" (dict "Values" $filter.ingress) | nindent 12 }}
        pathType: {{ $filter.ingress.pathType }}
      {{- else if and $mirrorIngEnabled $lb.enabled }}
      - path: "/vald.v1.Search/"
        backend:
          service:
            name: {{ $lb.name }}
            {{- include "vald.ingressPort" (dict "Values" $lb.ingress) | nindent 12 }}
        pathType: {{ $lb.ingress.pathType }}
      - path: "/vald.v1.Insert/"
        backend:
          service:
            name: {{ $mirror.name }}
            {{- include "vald.ingressPort" (dict "Values" $mirror.ingress) | nindent 12 }}
        pathType: {{ $mirror.ingress.pathType }}
      # NOTE: Change backend service to mirror after UpdateTimestamp is implemented in mirror.
      - path: "/vald.v1.Update/UpdateTimestamp"
        backend:
          service:
            name: {{ $lb.name }}
            {{- include "vald.ingressPort" (dict "Values" $lb.ingress) | nindent 12 }}
        pathType: {{ $lb.ingress.pathType }}
      - path: "/vald.v1.Update/"
        backend:
          service:
            name: {{ $mirror.name }}
            {{- include "vald.ingressPort" (dict "Values" $mirror.ingress) | nindent 12 }}
        pathType: {{ $mirror.ingress.pathType }}
      - path: "/vald.v1.Upsert/"
        backend:
          service:
            name: {{ $mirror.name }}
            {{- include "vald.ingressPort" (dict "Values" $mirror.ingress) | nindent 12 }}
        pathType: {{ $mirror.ingress.pathType }}
      - path: "/vald.v1.Remove/"
        backend:
          service:
            name: {{ $mirror.name }}
            {{- include "vald.ingressPort" (dict "Values" $mirror.ingress) | nindent 12 }}
        pathType: {{ $mirror.ingress.pathType }}
      - path: "/vald.v1.Object/"
        backend:
          service:
            name: {{ $lb.name }}
            {{- include "vald.ingressPort" (dict "Values" $lb.ingress) | nindent 12 }}
        pathType: {{ $lb.ingress.pathType }}
      - path: "/vald.v1.Index/"
        backend:
          service:
            name: {{ $lb.name }}
            {{- include "vald.ingressPort" (dict "Values" $lb.ingress) | nindent 12 }}
        pathType: {{ $lb.ingress.pathType }}
      # NOTE: Change backend service to mirror after Flush is implemented in mirror.
      - path: "/vald.v1.Flush/"
        backend:
          service:
            name: {{ $lb.name }}
            {{- include "vald.ingressPort" (dict "Values" $lb.ingress) | nindent 12 }}
        pathType: {{ $lb.ingress.pathType }}
      - path: "/mirror.v1.Mirror/Register"
        backend:
          service:
            name: {{ $mirror.name }}
            {{- include "vald.ingressPort" (dict "Values" $mirror.ingress) | nindent 12 }}
        pathType: {{ $mirror.ingress.pathType }}
      {{- else if $lbIngEnabled }}
      - path: "/"
        backend:
          service:
            name: {{ $lb.name }}
            {{- include "vald.ingressPort" (dict "Values" $lb.ingress) | nindent 12 }}
        pathType: {{ $lb.ingress.pathType }}
      {{- end }}
      {{- if or $filterReflectionEnabled $lbReflectionEnabled }}
      - path: "/grpc.reflection.v1alpha.ServerReflection/ServerReflectionInfo"
        {{- if $filterReflectionEnabled }}
        backend:
          service:
            name: {{ $filter.name }}
            {{- include "vald.ingressPort" (dict "Values" $filter.ingress) | nindent 12 }}
        pathType: {{ $filter.ingress.pathType }}
        {{- else }}
        backend:
          service:
            name: {{ $lb.name }}
            {{- include "vald.ingressPort" (dict "Values" $lb.ingress) | nindent 12 }}
        pathType: {{ $lb.ingress.pathType }}
        {{- end }}
      - path: "/grpc.reflection.v1.ServerReflection/ServerReflectionInfo"
        {{- if $filterReflectionEnabled }}
        backend:
          service:
            name: {{ $filter.name }}
            {{- include "vald.ingressPort" (dict "Values" $filter.ingress) | nindent 12 }}
        pathType: {{ $filter.ingress.pathType }}
        {{- else }}
        backend:
          service:
            name: {{ $lb.name }}
            {{- include "vald.ingressPort" (dict "Values" $lb.ingress) | nindent 12 }}
        pathType: {{ $lb.ingress.pathType }}
        {{- end }}
      {{- end }}
{{- end }}
