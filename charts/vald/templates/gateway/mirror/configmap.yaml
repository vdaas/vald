#
# Copyright (C) 2019-2024 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
{{- $gateway := .Values.gateway.mirror -}}
{{- $lb := .Values.gateway.lb -}}
{{- if $gateway.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $gateway.name }}-config
  labels:
    app.kubernetes.io/name: {{ include "vald.name" . }}
    helm.sh/chart: {{ include "vald.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/component: gateway-mirror
data:
  config.yaml: |
    ---
    version: {{ $gateway.version }}
    time_zone: {{ default .Values.defaults.time_zone $gateway.time_zone }}
    logging:
      {{- $logging := dict "Values" $gateway.logging "default" .Values.defaults.logging }}
      {{- include "vald.logging" $logging | nindent 6 }}
    server_config:
      {{- $servers := dict "Values" $gateway.server_config "default" .Values.defaults.server_config }}
      {{- include "vald.servers" $servers | nindent 6 }}
    observability:
      {{- $observability := dict "Values" $gateway.observability "default" .Values.defaults.observability }}
      {{- include "vald.observability" $observability | nindent 6 }}
    gateway:
      pod_name: {{ $gateway.gateway_config.pod_name }}
      register_duration: {{ $gateway.gateway_config.register_duration }}
      namespace: {{ $gateway.gateway_config.namespace }}
      discovery_duration: {{ $gateway.gateway_config.discovery_duration }}
      colocation: {{ $gateway.gateway_config.colocation }}
      group: {{ $gateway.gateway_config.group }}
      net:
      {{- toYaml $gateway.gateway_config.net | nindent 8 }}
      client:
        {{- $client := $gateway.gateway_config.client }}
        {{- $addrs  := default list $client.addrs }}
        {{- if $lb.enabled -}}
        {{- $defaultHost := printf "%s.%s.svc.cluster.local" $lb.name .Release.Namespace }}
        {{- $defaultPort := default .Values.defaults.server_config.servers.grpc.port $lb.server_config.servers.grpc.port }}
        {{- $defaultAddr := (list (printf "%s:%d" $defaultHost (int64 $defaultPort))) }}
        {{- $addrs = (concat $addrs $defaultAddr) }}
        {{- end -}}
        {{- if $addrs }}
        addrs:
          {{- toYaml $addrs | nindent 10 }}
        {{- else }}
        addrs: []
        {{- end -}}
        {{- $GRPCClient := dict "Values" $client "default" .Values.defaults.grpc.client }}
        {{- include "vald.grpc.client" $GRPCClient | nindent 8 }}
      self_mirror_addr:
        {{- if $gateway.ingress.enabled -}}
        {{- $gateway.gateway_config.self_mirror_addr | default (printf "%s:%d" $gateway.ingress.host 80) | indent 1 }}
        {{- else -}}
        {{- $defaultHost := printf "%s.%s.svc.cluster.local" $gateway.name .Release.Namespace }}
        {{- $defaultPort := default .Values.defaults.server_config.servers.grpc.port $gateway.server_config.servers.grpc.port }}
        {{- printf "%s:%d" $defaultHost (int64 $defaultPort) | indent 1 }}
        {{- end }}
      gateway_addr:
        {{- if $lb.enabled -}}
        {{- $defaultHost := printf "%s.%s.svc.cluster.local" $lb.name .Release.Namespace }}
        {{- $defaultPort := default .Values.defaults.server_config.servers.grpc.port $lb.server_config.servers.grpc.port }}
        {{- printf "%s:%d" $defaultHost (int64 $defaultPort) | indent 1 }}
        {{- end }}
{{- end }}
