#
# Copyright (C) 2019-2020 Vdaas.org Vald team ( kpango, rinx, kmrmt )
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.compressor.name }}-config
data:
  config.yaml: |
    ---
    version: {{ .Values.compressor.version }}
    time_zone: {{ default .Values.defaults.time_zone .Values.compressor.time_zone }}
    logging:
      {{- $logging := dict "Values" .Values.compressor.logging "default" .Values.defaults.logging }}
      {{- include "vald.logging" $logging | nindent 6 }}
    server_config:
      {{- $servers := dict "Values" .Values.compressor.server_config "default" .Values.defaults.server_config }}
      {{- include "vald.servers" $servers | nindent 6 }}
    observability:
      {{- $observability := dict "Values" .Values.compressor.observability "default" .Values.defaults.observability }}
      {{- include "vald.observability" $observability | nindent 6 }}
    backup:
      host: {{ .Values.backupManager.name }}.{{ .Release.Namespace }}.svc.cluster.local
      port: {{ default .Values.defaults.server_config.servers.grpc.port .Values.backupManager.server_config.servers.grpc.port }}
      client:
        {{- $backupClient := dict "Values" .Values.compressor.backup.client "default" .Values.defaults.grpc.client }}
        {{- include "vald.grpc.client" $backupClient | nindent 8 }}
    compressor:
      compress_algorithm: {{ .Values.compressor.compress.compress_algorithm | quote }}
      compression_level: {{ .Values.compressor.compress.compression_level }}
      concurrent_limit: {{ .Values.compressor.compress.concurrent_limit }}
      buffer: {{ .Values.compressor.compress.buffer }}
      pod_ip: {{ .Values.compressor.compress.pod_ip | quote }}
      compressor_port: {{ default .Values.defaults.server_config.servers.grpc.port .Values.compressor.server_config.servers.grpc.port }}
      compressor_name: {{ .Values.compressor.name | quote }}
      compressor_namespace: {{ .Values.compressor.compress.compressor_namespace | quote }}
      compressor_dns: {{ .Values.compressor.name }}.{{ .Release.Namespace }}.svc.cluster.local
      node_name: {{ .Values.compressor.compress.node_name | quote }}
      discoverer:
        host: {{ .Values.discoverer.name }}.{{ .Release.Namespace }}.svc.cluster.local
        port: {{ default .Values.defaults.server_config.servers.grpc.port .Values.discoverer.server_config.servers.grpc.port }}
        duration: {{ .Values.compressor.compress.discoverer.duration }}
        discover_client:
          {{- $discoverClient := dict "Values" .Values.compressor.compress.discoverer.discover_client "default" .Values.defaults.grpc.client }}
          {{- include "vald.grpc.client" $discoverClient | nindent 10 }}
        agent_client:
          {{- $agentClient := dict "Values" .Values.compressor.compress.discoverer.agent_client "default" .Values.defaults.grpc.client }}
          {{- include "vald.grpc.client" $agentClient | nindent 10 }}
      registerer:
        buffer: {{ .Values.compressor.compress.registerer.buffer }}
        backoff:
          initial_duration: {{ .Values.compressor.compress.registerer.backoff.initial_duration | quote }}
          backoff_time_limit: {{ .Values.compressor.compress.registerer.backoff.backoff_time_limit | quote }}
          maximum_duration: {{ .Values.compressor.compress.registerer.backoff.maximum_duration | quote }}
          jitter_limit: {{ .Values.compressor.compress.registerer.backoff.jitter_limit | quote }}
          backoff_factor: {{ .Values.compressor.compress.registerer.backoff.backoff_factor }}
          retry_count: {{ .Values.compressor.compress.registerer.backoff.retry_count }}
          enable_error_log: {{ .Values.compressor.compress.registerer.backoff.enable_error_log }}
        worker:
          concurrent_limit: {{ .Values.compressor.compress.registerer.worker.concurrent_limit }}
          buffer: {{ .Values.compressor.compress.registerer.worker.buffer }}
