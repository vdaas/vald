#
# Copyright (C) 2019-2020 Vdaas.org Vald team ( kpango, rinx, kmrmt )
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
{{- $index := .Values.manager.index -}}
{{- if and $index.enabled (eq $index.kind "Deployment") }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $index.name }}
  labels:
    app: {{ $index.name }}
    app.kubernetes.io/name: {{ include "vald.name" . }}
    helm.sh/chart: {{ include "vald.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/component: manager-index
  {{- if $index.annotations }}
  annotations:
    {{- toYaml $index.annotations | nindent 4 }}
  {{- end }}
spec:
  progressDeadlineSeconds: {{ $index.progressDeadlineSeconds }}
  replicas: {{ $index.replicas }}
  revisionHistoryLimit: {{ $index.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ $index.name }}
  strategy:
    rollingUpdate:
      maxSurge: {{ $index.rollingUpdate.maxSurge }}
      maxUnavailable: {{ $index.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ $index.name }}
        app.kubernetes.io/name: {{ include "vald.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: manager-index
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/manager/index/configmap.yaml") . | sha256sum }}
        {{- if $index.podAnnotations }}
        {{- toYaml $index.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
      {{- if $index.initContainers }}
      initContainers:
        {{- $initContainers := dict "initContainers" $index.initContainers "Values" .Values "namespace" .Release.Namespace -}}
        {{- include "vald.initContainers" $initContainers | trim | nindent 8 }}
      {{- end }}
      affinity:
        {{- include "vald.affinity" $index.affinity | nindent 8 }}
      {{- if $index.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml $index.topologySpreadConstraints | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $index.name }}
          image: "{{ $index.image.repository }}:{{ default .Values.defaults.image.tag $index.image.tag }}"
          imagePullPolicy: {{ $index.image.pullPolicy }}
          {{- $servers := dict "Values" $index.server_config "default" .Values.defaults.server_config -}}
          {{- include "vald.containerPorts" $servers | trim | nindent 10 }}
          resources:
            {{- toYaml $index.resources | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          {{- if $index.env }}
          env:
            {{- toYaml $index.env | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: {{ $index.name }}-config
              mountPath: /etc/server/
            {{- if $index.volumeMounts }}
            {{- toYaml $index.volumeMounts | nindent 12 }}
            {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: {{ $index.terminationGracePeriodSeconds }}
      volumes:
        - configMap:
            defaultMode: 420
            name: {{ $index.name }}-config
          name: {{ $index.name }}-config
        {{- if $index.volumes }}
        {{- toYaml $index.volumes | nindent 8 }}
        {{- end }}
      {{- if $index.nodeName }}
      nodeName: {{ $index.nodeName }}
      {{- end }}
      {{- if $index.nodeSelector }}
      nodeSelector:
        {{- toYaml $index.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if $index.tolerations }}
      tolerations:
        {{- toYaml $index.tolerations | nindent 8 }}
      {{- end }}
      {{- if $index.podPriority }}
      {{- if $index.podPriority.enabled }}
      priorityClassName: {{ $index.name }}-priority
      {{- end }}
      {{- end }}
status:
{{- end }}
