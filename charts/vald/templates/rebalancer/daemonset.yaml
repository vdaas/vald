#
# Copyright (C) 2019-2021 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
{{- if and .Values.rebalancer.enabled (eq .Values.rebalancer.kind "DaemonSet") }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.rebalancer.name }}
  labels:
    app: {{ .Values.rebalancer.name }}
    app.kubernetes.io/name: {{ include "vald.name" . }}
    helm.sh/chart: {{ include "vald.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/component: rebalancer
  {{- if .Values.rebalancer.annotations }}
  annotations:
    {{- toYaml .Values.rebalancer.annotations | nindent 4 }}
  {{- end }}
spec:
  revisionHistoryLimit: {{ .Values.rebalancer.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ .Values.rebalancer.name }}
  updateStrategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.rebalancer.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Values.rebalancer.name }}
        app.kubernetes.io/name: {{ include "vald.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: rebalancer
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/rebalancer/configmap.yaml") . | sha256sum }}
        {{- if .Values.rebalancer.podAnnotations }}
        {{- toYaml .Values.rebalancer.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.rebalancer.initContainers }}
      initContainers:
        {{- $initContainers := dict "initContainers" .Values.rebalancer.initContainers "Values" .Values "namespace" .Release.Namespace -}}
        {{- include "vald.initContainers" $initContainers | trim | nindent 8 }}
      {{- end }}
      affinity:
        {{- include "vald.affinity" .Values.rebalancer.affinity | nindent 8 }}
      {{- if .Values.rebalancer.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml .Values.rebalancer.topologySpreadConstraints | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Values.rebalancer.name }}
          image: "{{ .Values.rebalancer.image.repository }}:{{ default .Values.defaults.image.tag .Values.rebalancer.image.tag }}"
          imagePullPolicy: {{ .Values.rebalancer.image.pullPolicy }}
          {{- $servers := dict "Values" .Values.rebalancer.server_config "default" .Values.defaults.server_config -}}
          {{- include "vald.containerPorts" $servers | trim | nindent 10 }}
          resources:
            {{- toYaml .Values.rebalancer.resources | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          {{- if .Values.rebalancer.env }}
          env:
            {{- toYaml .Values.rebalancer.env | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: {{ .Values.rebalancer.name }}-config
              mountPath: /etc/server/
            - name: {{ .Values.rebalancer.rebalancer.rebalance_job_configmap_name }}
              mountPath: /etc/job/
            {{- if .Values.rebalancer.volumeMounts }}
            {{- toYaml .Values.rebalancer.volumeMounts | nindent 12 }}
            {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccountName: vald
      securityContext: {}
      terminationGracePeriodSeconds: {{ .Values.rebalancer.terminationGracePeriodSeconds }}
      volumes:
        - name: {{ .Values.rebalancer.name }}-config
          configMap:
            defaultMode: 420
            name: {{ .Values.rebalancer.name }}-config
        - name: {{ .Values.rebalancer.rebalancer.rebalance_job_configmap_name }}
          configMap:
            defaultMode: 420
            name: {{ .Values.rebalancer.rebalancer.rebalance_job_configmap_name }}
        {{- if .Values.rebalancer.volumes }}
        {{- toYaml .Values.rebalancer.volumes | nindent 8 }}
        {{- end }}
      {{- if .Values.rebalancer.nodeName }}
      nodeName: {{ .Values.rebalancer.nodeName }}
      {{- end }}
      {{- if .Values.rebalancer.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.rebalancer.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.rebalancer.tolerations }}
      tolerations:
        {{- toYaml .Values.rebalancer.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.rebalancer.podPriority }}
      {{- if .Values.rebalancer.podPriority.enabled }}
      priorityClassName: {{ .Values.rebalancer.name }}-priority
      {{- end }}
      {{- end }}
status:
{{- end }}
