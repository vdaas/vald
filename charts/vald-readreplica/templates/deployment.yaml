#
# Copyright (C) 2019-2024 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
{{- $values := .Values -}}
{{- $agent := .Values.agent -}}
{{- $readreplica := .Values.agent.readreplica -}}
{{- $defaults := .Values.defaults -}}
{{- $release := .Release -}}
{{- $chart := .Chart -}}
{{- $valdname := include "vald.name" . -}}
{{- $valdchart := include "vald.chart" . -}}
# if agent.enabled is true and agent.kind is StatefulSet and readreplica.enabled is true
# then create StatefulSet for agent and readreplica
{{- if and $agent.enabled (eq .Values.agent.kind "StatefulSet") $readreplica.enabled }}
{{ range $id := until (int $agent.minReplicas) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $readreplica.name }}-{{ $id }}
  labels:
    app: {{ $readreplica.name }}-{{ $id }}
    app.kubernetes.io/name: {{ $valdname }}
    helm.sh/chart: {{ $valdchart }}
    app.kubernetes.io/managed-by: {{ $release.Service }}
    app.kubernetes.io/instance: {{ $release.Name }}
    app.kubernetes.io/version: {{ $chart.Version }}
    app.kubernetes.io/component: {{ $readreplica.component_name }}
    {{ $readreplica.label_key }}: "{{ $id }}"
  {{- if $agent.annotations }}
  annotations:
    {{- toYaml $agent.annotations | nindent 4 }}
  {{- end }}
spec:
  {{- if not $agent.hpa.enabled }}
  replicas: {{ $readreplica.minReplicas }}
  {{- end }}
  revisionHistoryLimit: {{ $agent.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ $readreplica.name }}-{{ $id }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ $readreplica.name }}-{{ $id }}
        app.kubernetes.io/name: {{ $valdname }}
        app.kubernetes.io/instance: {{ $release.Name }}
        app.kubernetes.io/component: {{ $readreplica.component_name }}
      {{- $pprof := default $defaults.server_config.metrics.pprof $agent.server_config.metrics.pprof }}
    spec:
      {{- if $agent.initContainers }}
      initContainers:
        {{- if $agent.initContainers }}
        {{- $initContainers := dict "initContainers" $agent.initContainers "Values" $values "namespace" $release.Namespace -}}
        {{- include "vald.initContainers" $initContainers | trim | nindent 8 }}
        {{- end }}
      {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  # to avoid being deployed to the same node as the agent pods
                  - key: app
                    operator: In
                    values:
                    - {{ $agent.name }}
                  # to avoid being deployed to the same node as the other readreplica pods
                  # and Deployment replicas of myself
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                    - {{ $readreplica.component_name }}
                topologyKey: kubernetes.io/hostname
              weight: 100
      {{- if $agent.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml $agent.topologySpreadConstraints | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $agent.name }}
          image: "{{ $agent.image.repository }}:{{ default $defaults.image.tag $agent.image.tag }}"
          imagePullPolicy: {{ $agent.image.pullPolicy }}
          {{- $servers := dict "Values" $agent.server_config "default" $defaults.server_config -}}
          {{- include "vald.containerPorts" $servers | trim | nindent 10 }}
          resources:
            {{- toYaml $agent.resources | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          {{- if $agent.securityContext }}
          securityContext:
            {{- toYaml $agent.securityContext | nindent 12 }}
          {{- end }}
          {{- if $agent.env }}
          env:
            {{- toYaml $agent.env | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: {{ $readreplica.name }}-config
              mountPath: /etc/server/
            {{- if not $agent.ngt.enable_in_memory_mode }}
            {{- if $agent.ngt.index_path }}
            {{- if $agent.persistentVolume.enabled }}
            - name: {{ $readreplica.volume_name }}
              mountPath: {{ dir $agent.ngt.index_path }}
              mountPropagation: {{ $agent.persistentVolume.mountPropagation }}
            {{- else }}
            - name: {{ $agent.name }}-local
              mountPath: {{ dir $agent.ngt.index_path }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- if $agent.volumeMounts }}
            {{- toYaml $agent.volumeMounts | nindent 12 }}
            {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      {{- if $agent.podSecurityContext }}
      securityContext:
        {{- toYaml $agent.podSecurityContext | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ $agent.terminationGracePeriodSeconds }}
      volumes:
        - name: {{ $readreplica.name }}-config
          configMap:
            defaultMode: 420
            name: {{ $readreplica.name }}-config
        - name: {{ $readreplica.volume_name }}
          persistentVolumeClaim:
            claimName: {{ $readreplica.name }}-pvc-{{ $id }}
        {{- if $agent.volumes }}
        {{- toYaml $agent.volumes | nindent 8 }}
        {{- end }}
      {{- if $agent.nodeName }}
      nodeName: {{ $agent.nodeName }}
      {{- end }}
      {{- if $agent.nodeSelector }}
      nodeSelector:
        {{- toYaml $agent.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if $agent.tolerations }}
      tolerations:
        {{- toYaml $agent.tolerations | nindent 8 }}
      {{- end }}
      {{- if $agent.podPriority }}
      {{- if $agent.podPriority.enabled }}
      priorityClassName: {{ $release.Namespace }}-{{ $agent.name }}-priority
      {{- end }}
      {{- end }}
{{- end }}
{{- end }}
