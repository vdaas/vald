# syntax = docker/dockerfile:latest
#
# Copyright (C) 2019-2024 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# DO_NOT_EDIT this Dockerfile is generated by https://github.com/vdaas/vald/blob/main/hack/docker/gen/main.go
ARG UPX_OPTIONS=-9
# skipcq: DOK-DL3026,DOK-DL3007
FROM ghcr.io/vdaas/vald/vald-buildbase:nightly
LABEL maintainer="vdaas.org vald team <vald@vdaas.org>"
# skipcq: DOK-DL3002
USER root:root
ARG TARGETARCH
ARG TARGETOS
ARG GO_VERSION
ARG RUST_VERSION
ENV APP_NAME=ci-container
ENV CC=gcc
ENV CXX=g++
ENV DEBIAN_FRONTEND=noninteractive
ENV GO111MODULE=on
ENV GOPATH=/go
ENV GOROOT=/opt/go
ENV HOME=/root
ENV INITRD=No
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV ORG=vdaas
ENV PKG=ci/base
ENV REPO=vald
ENV RUST_HOME=/usr/local/lib/rust
ENV TZ=Etc/UTC
ENV USER=root
ENV RUSTUP_HOME=${RUST_HOME}/rustup
ENV CARGO_HOME=${RUST_HOME}/cargo
ENV PATH=${CARGO_HOME}/bin:${GOPATH}/bin:${GOROOT}/bin:${RUSTUP_HOME}/bin:/usr/local/bin:${PATH}
WORKDIR ${GOPATH}/src/github.com/${ORG}/${REPO}
SHELL ["/bin/bash", "-o", "pipefail", "-c"]
#skipcq: DOK-W1001, DOK-SC2046, DOK-SC2086, DOK-DL3008
RUN --mount=type=bind,target=.,rw \
    --mount=type=tmpfs,target=/tmp \
    --mount=type=cache,target=/var/lib/apt,sharing=locked,id=${APP_NAME} \
    --mount=type=cache,target=/var/cache/apt,sharing=locked,id=${APP_NAME} \
    --mount=type=cache,target="${GOPATH}/pkg",id="go-build-${TARGETARCH}" \
    --mount=type=cache,target="${HOME}/.cache/go-build",id="go-build-${TARGETARCH}" \
    --mount=type=tmpfs,target="${GOPATH}/src" \
    set -ex \
    && echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' > /etc/apt/apt.conf.d/keep-cache \
    && echo 'APT::Install-Recommends "false";' > /etc/apt/apt.conf.d/no-install-recommends \
    && apt-get clean \
    && apt-get update -y \
    && apt-get upgrade -y \
    && apt-get install -y --no-install-recommends --fix-missing \
    build-essential \
    ca-certificates \
    curl \
    tzdata \
    locales \
    git \
    npm \
    cmake \
    g++ \
    gcc \
    libssl-dev \
    unzip \
    liblapack-dev \
    libomp-dev \
    libopenblas-dev \
    gfortran \
    pkg-config \
    file \
    gawk \
    gnupg2 \
    graphviz \
    jq \
    libaec-dev \
    libhdf5-dev \
    sed \
    zip \
    && ldconfig \
    && echo "${LANG} UTF-8" > /etc/locale.gen \
    && ln -fs /usr/share/zoneinfo/${TZ} /etc/localtime \
    && locale-gen ${LANGUAGE} \
    && update-locale LANG=${LANGUAGE} \
    && dpkg-reconfigure -f noninteractive tzdata \
    && apt-get clean \
    && apt-get autoclean -y \
    && apt-get autoremove -y \
    && make GOPATH="${GOPATH}" GOROOT="${GOROOT}" GO_VERSION="${GO_VERSION}" go/install \
    && make GOPATH="${GOPATH}" GOROOT="${GOROOT}" GO_VERSION="${GO_VERSION}" go/download \
    && make RUST_VERSION="${RUST_VERSION}" rust/install \
    && make GOARCH=${TARGETARCH} GOOS=${TARGETOS} deps GO_CLEAN_DEPS=false \
    && make GOARCH=${TARGETARCH} GOOS=${TARGETOS} golangci-lint/install \
    && make GOARCH=${TARGETARCH} GOOS=${TARGETOS} gotestfmt/install \
    && make cmake/install \
    && make buf/install \
    && make hdf5/install \
    && make helm-docs/install \
    && make helm/install \
    && make k3d/install \
    && make k9s/install \
    && make kind/install \
    && make kubectl/install \
    && make kubelinter/install \
    && make minikube/install \
    && make reviewdog/install \
    && make stern/install \
    && make telepresence/install \
    && make tparse/install \
    && make yq/install \
    && make ngt/install \
    && make faiss/install \
    && make usearch/install \
    && rm -rf ${GOPATH}/src/github.com/${ORG}/${REPO}/*
# skipcq: DOK-DL3002
USER root:root
ENTRYPOINT ["/bin/bash"]