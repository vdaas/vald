#
# Copyright (C) 2019-2024 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: "Setup E2E environment"
description: "A action to set up the environment for executing E2E test"
inputs:
  require_libhdf5:
    description: "If libhdf5 is not required, set this to false"
    required: false
    default: "true"
  require_go:
    description: "If go is not required, set this to false"
    required: false
    default: "true"
  require_helm:
    description: "If helm is not required, set this to false"
    required: false
    default: "true"
  require_k3d:
    description: "If k3d is not required, set this to false"
    required: false
    default: "true"
  require_minikube:
    description: "If minikube is not required, set this to true and set require_k3d to false"
    required: false
    default: "false"
  ingress_port:
    description: 'If it is not "0", ingress will be exposed to the specified port'
    required: false
    default: "0"
  target_images:
    description: "Image names"
    required: false
    default: "vdaas/vald-agent-ngt vdaas/vald-agent-faiss vdaas/vald-agent-sidecar vdaas/vald-discoverer-k8s vdaas/vald-lb-gateway vdaas/vald-filter-gateway vdaas/vald-mirror-gateway vdaas/vald-manager-index"
outputs:
  HELM_EXTRA_OPTIONS:
    description: "Helm extra options that specifies E2E target image tags"
    value: ${{ steps.specify_container_versions.outputs.HELM_EXTRA_OPTIONS }}
  IMAGE_TAGS:
    description: "Specifies E2E target image tags"
    value: ${{ steps.specify_container_versions.outputs.IMAGE_TAGS }}
runs:
  using: "composite"
  steps:
    - name: Install libhdf5
      if: ${{ inputs.require_libhdf5 == 'true' }}
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y libhdf5-dev
    - name: Setup Go environment
      if: ${{ inputs.require_go == 'true' }}
      uses: ./.github/actions/setup-go
    - name: Setup Helm environment
      if: ${{ inputs.require_helm == 'true' }}
      uses: ./.github/actions/setup-helm
    - name: Wait for target Docker images
      if: startsWith( github.ref, 'refs/tags/')
      uses: ./.github/actions/wait-for-docker-image
      with:
        images: ${{ inputs.target_images }}
    - name: Determine Docker image tag
      id: determine_tag_name
      uses: ./.github/actions/determine-docker-image-tag
    - name: Specify container versions
      id: specify_container_versions
      uses: ./.github/actions/detect-docker-image-tags
      with:
        tags: ${{ steps.determine_tag_name.outputs.TAGS }}
        images: ${{ inputs.target_images }}
    - uses: ./.github/actions/setup-k3d
      if: ${{ inputs.require_k3d == 'true' }}
      with:
        agents: 3
        ingress_port: ${{ inputs.ingress_port }}
    - name: Setup Minikube environment
      if: ${{ inputs.require_minikube == 'true' }}
      shell: bash
      run: |
        make minikube/install
        make minikube/start
    - name: Check Kubernetes cluster
      shell: bash
      run: |
        kubectl cluster-info dump
