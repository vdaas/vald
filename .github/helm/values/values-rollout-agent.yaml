#
# Copyright (C) 2019-2025 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

defaults:
  image:
    tag: pr-2798
  logging:
    level: debug
  server_config:
    metrics:
      pprof:
        enabled: true # enable Pyroscope
    healths:
      liveness:
        livenessProbe:
          initialDelaySeconds: 60
      readiness:
        readinessProbe:
          initialDelaySeconds: 60
    servers:
      grpc:
        server:
          grpc:
            interceptors:
              - RecoverInterceptor
              - TraceInterceptor
              - MetricInterceptor
  grpc:
    client:
      dial_option:
        interceptors:
          - TraceInterceptor
  observability:
    enabled: true
    otlp:
      collector_endpoint: "opentelemetry-collector-collector.default.svc.cluster.local:4317"
    trace:
      enabled: true
  networkPolicy:
    enabled: true
    custom:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app.kubernetes.io/name: pyroscope
      egress:
        - to:
            - podSelector:
                matchLabels:
                  app.kubernetes.io/name: opentelemetry-collector-collector
gateway:
  lb:
    enabled: true
    maxReplicas: 1
    minReplicas: 1
    hpa:
      enabled: false
    resources:
      requests:
        cpu: 200m
        memory: 150Mi
    gateway_config:
      index_replica: 2
      # ingress:
      #   # if enabled is true, vald-lb-gateway can be connected through Kubernetes ingress from the external network.
      #   enabled: true
      #   # TODO: Set your ingress host.
      #   host: localhost
      # service:
      #   # NOTE: https://doc.traefik.io/traefik/routing/providers/kubernetes-ingress/#on-service
      #   annotations:
      #     traefik.ingress.kubernetes.io/service.serversscheme: h2c
agent:
  minReplicas: 3
  maxReplicas: 3
  podManagementPolicy: Parallel
  hpa:
    enabled: false
  resources:
    requests:
      cpu: 100m
      memory: 50Mi
  # We recommend to set this value long enough to ensure the backup speed of PV, since the Index is backed up at the end of the pod.
  terminationGracePeriodSeconds: 600
  # This is the persistent volume settings.
  # Please change it according to your environment.
  persistentVolume:
    enabled: true
    accessMode: ReadWriteOncePod
    storageClass: local-path
    size: 500Mi
  ngt:
    auto_index_duration_limit: 2m
    auto_index_check_duration: 30s
    auto_index_length: 500
    dimension: 784
    enable_in_memory_mode: false
    index_path: "/var/ngt/index"
discoverer:
  minReplicas: 1
  hpa:
    enabled: false
  resources:
    requests:
      cpu: 100m
      memory: 50Mi
manager:
  index:
    replicas: 1
    resources:
      requests:
        cpu: 100m
        memory: 30Mi
    indexer:
      auto_index_duration_limit: 2m
      auto_index_check_duration: 30s
      auto_index_length: 1000
    corrector:
      enabled: true
      # suspend because you do not want corrector to start automatically in CI
      # instead run it manually
      suspend: true
      schedule: "1 2 3 4 5"
