#
# Copyright (C) 2019-2023 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: "Run [patch] release"
on:
  push:
    branches:
      - "release/v*.*"
      - "!release/v*.*.*"

jobs:
  dump-contexts-to-log:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/dump-context

  semver-auto:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_BRANCH_NAME_SUFFIX: ${{ steps.set_context.outputs.RELEASE_BRANCH_NAME_SUFFIX }}
      RELEASE_TAG: ${{ steps.upgrade_semver.outputs.RELEASE_TAG }}
      RELEASE: ${{ steps.upgrade_semver.outputs.RELEASE }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set context
        id: set_context
        run: |
          RELEASE_BRANCH_NAME_SUFFIX=`echo '${{ github.ref }}' | sed -e 's:^refs/heads/release/::'`
          BRANCH_LATEST_TAG=`git tag --sort=v:refname | grep ${RELEASE_BRANCH_NAME_SUFFIX} | tail -n 1`
          RELEASE_KIND=`git log --pretty=format:%s -1 | sed -n -E 's:^\[(patch)\].*:\1:p'`

          echo "RELEASE_BRANCH_NAME_SUFFIX=${RELEASE_BRANCH_NAME_SUFFIX}" >> $GITHUB_OUTPUT # e.g) vx.x
          echo "BRANCH_LATEST_TAG=${BRANCH_LATEST_TAG}"                   >> $GITHUB_OUTPUT # e.g) vx.x.x or empty
          echo "RELEASE_KIND=${RELEASE_KIND}"                             >> $GITHUB_OUTPUT # e.g) patch or empty

          echo "RELEASE_BRANCH_NAME_SUFFIX=${RELEASE_BRANCH_NAME_SUFFIX}"
          echo "BRANCH_LATEST_TAG=${BRANCH_LATEST_TAG}"
          echo "RELEASE_KIND=${RELEASE_KIND}"

      - name: Upgrade semver
        id: upgrade_semver
        if: ${{ steps.set_context.outputs.RELEASE_KIND != '' }}
        env:
          BRANCH_LATEST_TAG: ${{ steps.set_context.outputs.BRANCH_LATEST_TAG }}
          RELEASE_KIND: ${{ steps.set_context.outputs.RELEASE_KIND }}
        run: |
          IFS=. read -r version minor patch <<< "${BRANCH_LATEST_TAG}" # e.g) version=v1, minor=7, patch=7

          case ${RELEASE_KIND} in
          patch) RELEASE_TAG="$version.$minor.$((patch+1))"; ;;
          *) echo "not supported semver kind"; exit 1; ;;
          esac

          echo "RELEASE=true"               >> $GITHUB_OUTPUT
          echo "RELEASE_TAG=${RELEASE_TAG}" >> $GITHUB_OUTPUT # e.g) vx.x.x

          echo "RELEASE_TAG=${RELEASE_TAG}"

  release-pr:
    if: ${{ needs.semver-auto.outputs.RELEASE == 'true' }}
    needs:
      - semver-auto
    uses: ./.github/workflows/_release-pr.yml
    with:
      release_branch_name: "release/${{ needs.semver-auto.outputs.RELEASE_BRANCH_NAME_SUFFIX }}"
      release_tag: ${{ needs.semver-auto.outputs.RELEASE_TAG }}
    secrets: inherit
