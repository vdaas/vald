on:
  issue_comment:
    types: [created]
name: ChatOps
jobs:
  label:
    name: Add labels
    runs-on: ubuntu-latest
    steps:
      - name: check PR Comments
        id: check_comments_label
        uses: machine-learning-apps/actions-chatops@master
        with:
          TRIGGER_PHRASE: "/label"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: add label
        if: steps.check_comments_label.outputs.BOOL_TRIGGERED == 'true'
        run: |
          curl -o CHATOPS_OWNERS https://github.com/vdaas/vald/blob/master/.github/CHATOPS_OWNERS
          if grep "^${USERNAME}$" CHATOPS_OWNERS > /dev/null 2>&1 ; then
            echo "[OK] label requested by ${USERNAME}"
            labels=`echo "${TRAILING_LINE}" | jq -cMR 'split(" ")'`
            curl --include --verbose --fail \
            -H "Accept: application/json" \
            -H "Content-Type:application/json" \
            -H "Authorization: token ${GITHUB_TOKEN}" \
            --request POST \
            --data "{\"labels\": ${labels}}" \
            `echo "${ISSUE_URL}" | sed -e 's/{\/name}//'`
          else
            echo "[NG] ${USERNAME} is not a member of CHATOPS_OWNERS"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.DISPATCH_TOKEN }}
          ISSUE_URL: ${{ github.event.issue.labels_url }}
          USERNAME: ${{ steps.check_comments_label.outputs.COMMENTER_USERNAME }}
          TRAILING_LINE: ${{ steps.check_comments_label.outputs.TRAILING_LINE }}
  rebase:
    name: Rebase
    runs-on: ubuntu-latest
    steps:
      - name: check PR Comments
        id: check_comments_rebase
        uses: machine-learning-apps/actions-chatops@master
        with:
          TRIGGER_PHRASE: "/rebase"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: comment back to PR
        if: steps.check_comments_rebase.outputs.BOOL_TRIGGERED == 'true'
        run: |
          curl -o CHATOPS_OWNERS https://github.com/vdaas/vald/blob/master/.github/CHATOPS_OWNERS
          if grep "^${USERNAME}$" CHATOPS_OWNERS > /dev/null 2>&1 ; then
            echo "[OK] rebase requested by ${USERNAME}"
            curl --include --verbose --fail \
            -H "Accept: application/json" \
            -H "Content-Type:application/json" \
            -H "Authorization: token ${GITHUB_TOKEN}" \
            --request POST \
            --data "{\"body\": \"**[REBASE]** Rebase triggered by ${USERNAME} for branch: ${BRANCH}\"}" \
            $API_URL
          else
            echo "[NG] ${USERNAME} is not a member of CHATOPS_OWNERS"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.DISPATCH_TOKEN }}
          API_URL: ${{ github.event.issue.comments_url }}
          BRANCH: ${{ steps.check_comments_rebase.outputs.BRANCH_NAME }}
          USERNAME: ${{ steps.check_comments_rebase.outputs.COMMENTER_USERNAME }}
      - uses: actions/checkout@v1
        if: steps.check_comments_rebase.outputs.BOOL_TRIGGERED == 'true'
      - name: Automatic Rebase
        if: steps.check_comments_rebase.outputs.BOOL_TRIGGERED == 'true'
        uses: cirrus-actions/rebase@1.2
        env:
          GITHUB_TOKEN: ${{ secrets.DISPATCH_TOKEN }}
  add-contributors:
    name: Add contributors
    needs:
      - rebase
    runs-on: ubuntu-latest
    steps:
      - name: check PR Comments
        id: check_comments_add_contributors
        uses: machine-learning-apps/actions-chatops@master
        with:
          TRIGGER_PHRASE: "/add-contributors"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: check executable
        if: steps.check_comments_add_contributors.outputs.BOOL_TRIGGERED == 'true'
        id: check_executable
        run: |
          curl -o CHATOPS_OWNERS https://github.com/vdaas/vald/blob/master/.github/CHATOPS_OWNERS
          if grep "^${USERNAME}$" CHATOPS_OWNERS > /dev/null 2>&1 ; then
            echo "[OK] Add contributor request by ${USERNAME}"

            curl --include --verbose --fail \
            -H "Accept: application/json" \
            -H "Content-Type:application/json" \
            -H "Authorization: token ${GITHUB_TOKEN}" \
            --request POST \
            --data "{\"body\": \"**[ADD CONTRIBUTORS]** Add contributor ${PR_AUTHOR} to CONTRIBUTORS triggered by ${USERNAME}.\"}" \
            $API_URL

            echo "::set-output name=executable::true"
          else
            echo "[NG] ${USERNAME} is not a member of CHATOPS_OWNERS"
            echo "::set-output name=executable::false"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.DISPATCH_TOKEN }}
          USERNAME: ${{ steps.check_comments_add_contributors.outputs.COMMENTER_USERNAME }}
          PR_AUTHOR: ${{ github.event.issue.user.login }}
          API_URL: ${{ github.event.issue.comments_url }}
      - uses: actions/checkout@v1
        if: steps.check_executable.outputs.executable == 'true'
        with:
          fetch-depth: 1
      - name: Add contributor and push
        if: steps.check_execute.outputs.executable == 'true'
        run: |
          if grep "^${PR_AUTHOR}$" CONTRIBUTORS > /dev/null 2>&1 ; then
            echo "${PR_AUTHOR} already exists in CONTRIBUTORS"
          else
            echo "Add ${PR_AUTHOR} to CONTRIBUTORS"

            echo "${PR_AUTHOR}" >> CONTRIBUTORS

            git config --global user.name "vdaas-ci"
            git config --global user.email "ci@vdaas.org"

            git add CONTRIBUTORS
            git commit --signoff -m ":robot: Automatically add contributor"

            git remote set-url origin "https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"

            REMOTE_BRANCH=`echo ${GITHUB_REF} | sed -e 's:^refs/heads/::'`

            git push origin HEAD:${REMOTE_BRANCH}
          fi
        env:
          GITHUB_USER: ${{ secrets.DISPATCH_USER }}
          GITHUB_TOKEN: ${{ secrets.DISPATCH_TOKEN }}
          PR_AUTHOR: ${{ github.event.issue.user.login }}
  approve:
    name: Approve
    needs:
      - rebase
      - add-contributors
    runs-on: ubuntu-latest
    steps:
      - name: check PR Comments
        id: check_comments_approve
        uses: machine-learning-apps/actions-chatops@master
        with:
          TRIGGER_PHRASE: "/approve"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: approve
        if: steps.check_comments_approve.outputs.BOOL_TRIGGERED == 'true'
        run: |
          curl -o CHATOPS_OWNERS https://github.com/vdaas/vald/blob/master/.github/CHATOPS_OWNERS
          if grep "^${USERNAME}$" CHATOPS_OWNERS > /dev/null 2>&1 ; then
            echo "[OK] Approved by ${USERNAME}"
            curl --include --verbose --fail \
            -H "Accept: application/json" \
            -H "Content-Type:application/json" \
            -H "Authorization: token ${GITHUB_TOKEN}" \
            --request POST \
            --data "{\"body\": \"**[APPROVED]** This PR is approved by ${USERNAME}.\", \"event\": \"APPROVE\"}" \
            "${PR_URL}/reviews"
          else
            echo "[NG] ${USERNAME} is not a member of CHATOPS_OWNERS"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.DISPATCH_TOKEN }}
          PR_URL: ${{ github.event.issue.pull_request.url }}
          USERNAME: ${{ steps.check_comments_approve.outputs.COMMENTER_USERNAME }}
