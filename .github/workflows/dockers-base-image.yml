name: 'Build docker image: base'
on:
  push:
    branches:
      - master
    paths:
      - 'go.mod'
      - 'go.sum'
      - 'dockers/base/Dockerfile'
      - 'versions/GO_VERSION'
  pull_request:
    paths:
      - 'go.mod'
      - 'go.sum'
      - 'dockers/base/Dockerfile'
      - 'versions/GO_VERSION'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all
    - name: Setup Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        buildkitd-flags: "--debug"
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-vald-base-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-vald-base-
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_PASS }}
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ secrets.PACKAGE_USER }}
        password: ${{ secrets.PACKAGE_TOKEN }}
    - name: Image name
      id: image_name
      run: |
        image_name=`make docker/name/base`
        base_platforms=`make docker/platforms`
        echo "::set-env name=IMAGE_NAME::${image_name}"
        echo "::set-output name=IMAGE_NAME::${image_name}"
        echo "::set-output name=BASE_PLATFORMS::${base_platforms}"
    - name: Determine tag name (master)
      if: github.ref == 'refs/heads/master'
      run: |
        echo "::set-env name=PRIMARY_TAG::nightly"
    - name: Determine tag name (pull request)
      if: github.event_name == 'pull_request'
      run: |
        pr_num=`cat $GITHUB_EVENT_PATH | jq -r ".number"`
        echo "PR-${pr_num}" > versions/VALD_VERSION
        echo "::set-env name=PRIMARY_TAG::pr-${pr_num}"
    - name: Determine tag name (tags)
      if: startsWith( github.ref, 'refs/tags/')
      id: determine_tag
      run: |
        tag_name=`echo $GITHUB_REF | sed -e 's:^refs/tags/::'`
        echo "::set-output name=TAG_NAME::${tag_name}"
        echo "::set-env name=PRIMARY_TAG::${tag_name}"
    - name: Build and Push
      run: |
        make \
          DOCKER="docker buildx" \
          DOCKER_OPTS_BASE="--platform ${PLATFORMS} --builder ${BUILDER} ${CACHE_OPTS} ${LABEL_OPTS} --push" \
          TAG="${PRIMARY_TAG}" \
          docker/build/base
        make \
          REPO="ghcr.io/vdaas/vald" \
          DOCKER="docker buildx" \
          DOCKER_OPTS_BASE="--platform ${PLATFORMS} --builder ${BUILDER} ${CACHE_OPTS} ${LABEL_OPTS} --push" \
          TAG="${PRIMARY_TAG}" \
          docker/build/base
      env:
        DOCKER_BUILDKIT: 1
        PLATFORMS: ${{ steps.image_name.outputs.BASE_PLATFORMS }}
        BUILDER: ${{ steps.buildx.outputs.name }}
        CACHE_OPTS: "--cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,mode=max,dest=/tmp/.buildx-cache"
        LABEL_OPTS: "--label org.opencontainers.image.url=${{ github.event.repository.html_url }} --label org.opencontainers.image.source=${{ github.event.repository.html_url }} --label org.opencontainers.image.revision=${{ github.sha }}"
