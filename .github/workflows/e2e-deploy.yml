name: 'Run e2e deploy test'
on:
  push:
    branches:
      - master
    tags:
       - '*.*.*'
       - 'v*.*.*'
       - '*.*.*-*'
       - 'v*.*.*-*'
    paths:
      - 'versions/VALD_VERSION'

jobs:
  e2e-deploy:
    name: e2e deploy test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v1
      - name: wait for dockers
        run: |
          tag=$(cat versions/VALD_VERSION)
          for image in \
            vdaas/vald-agent-ngt \
            vdaas/vald-discoverer-k8s \
            vdaas/vald-manager-compressor \
            vdaas/vald-meta-cassandra \
            vdaas/vald-manager-backup-cassandra \
            vdaas/vald-gateway \
            vdaas/vald-manager-index
          do
            echo "searching ${image}:${tag}"
            until curl -s "https://registry.hub.docker.com/v2/repositories/${image}/tags" | jq '.results[].name' | grep "${tag}"; do
              echo "waiting for ${image}:${tag} to be uploaded..."
              sleep 2
            done
          done
      - uses: engineerd/setup-kind@v0.2.0
        with:
          skipClusterCreation: true
      - uses: azure/setup-helm@v1
        with:
          version: 'v3.1.0'
      - name: Helm version
        run: |
          helm version
      - name: start kind
        run: |
          kind create cluster --name vald
          kubectl cluster-info
      - name: deploy vald
        run: |
          make k8s/external/scylla/deploy
          jq_query='.items[] | select( ([ .status.conditions[] | select( .type == "Ready" and .status == "True" ) ] | length ) != 1) | .metadata.namespace + "/" + .metadata.name'
          until [ $(kubectl get po --all-namespaces -o json | jq -r $jq_query | wc -l) -ge 3 ]
          do
            echo "waiting for Scylla to be ready..."
            kubectl get pods
            sleep 2
          done
          helm repo add vald https://vald.vdaas.org/charts
          helm install \
            --values vald/values-scylla.yaml \
            --set gateway.minReplicas=1 \
            --set gateway.hpa.enabled=false \
            --set gateway.gateway_config.index_replica=3 \
            --set agent.minReplicas=3 \
            --set agent.podManagementPolicy=Parallel \
            --set agent.hpa.enabled=false \
            --set agent.ngt.auto_index_check_duration=30s \
            --set agent.ngt.auto_index_length=20 \
            --set agent.ngt.dimension=6 \
            --set discoverer.minReplicas=1 \
            --set discoverer.hpa.enabled=false \
            --set compressor.minReplicas=1 \
            --set compressor.hpa.enabled=false \
            --set compressor.compress.compress_algorithm=gob \
            --set backupManager.minReplicas=1 \
            --set backupManager.hpa.enabled=false \
            --set indexManager.replicas=1 \
            --set meta.minReplicas=1 \
            --set meta.hpa.enabled=false \
            --generate-name vald/vald
          until [ $(kubectl get po --all-namespaces -o json | jq -r $jq_query | wc -l) -ge 12 ]
          do
            echo "wait for ready"
            kubectl get pods
            sleep 2
          done
          kubectl get pods
      - name: insert
        run: |
          kubectl port-forward deployment/vald-gateway 8081:8081 &
          pid=$!
          curl -o https://github.com/rinx/vald-client-clj/releases/download/v0.0.1/valdcli-linux-static.zip
          unzip valdcli-linux-static.zip
          chmod a+x valdcli
          sleep 10
          ./valdcli rand-vec -d 6 | ./valdcli -p 8081 insert --elapsed-time abc
          ./valdcli -p 8081 stream-insert --elapsed-time << EOF
          [{:vector [0.4554944575653239 0.17698450824379797 0.14510892025549904 0.45742806648293266 0.8255640513082158 0.6104319034657276], :id "d923e43c-7bdc-40fd-9a95-26e54edc54a5"}
          {:vector [0.9659463766247516 0.7129174248792229 0.3345289671984051 0.5325195679844225 0.5589141699199695 0.20497376669300038], :id "75666cc5-c5e8-4ba6-a653-7f4f216e2710"}]
          EOF
          sleep 1
          for i in `seq 1 30`
          do
            ./valdcli rand-vec -d 6 | ./valdcli -p 8081 insert --elapsed-time "v${i}"
            sleep 1
          done
          sleep 120
          ./valdcli -p 8081 exists --elapsed-time abc
          ./valdcli -p 8081 get-object --elapsed-time abc
          ./valdcli -p 8081 stream-get-object --elapsed-time '["abc" "d923e43c-7bdc-40fd-9a95-26e54edc54a5" "75666cc5-c5e8-4ba6-a653-7f4f216e2710"]'
          ./valdcli -p 8081 search --elapsed-time '[0.3 0.3 0.3 0.3 0.3 0.3]'
          ./valdcli -p 8081 stream-search --elapsed-time '[[0.3 0.1 0.7 0.3 0.5 0.5] [0.3 0.3 0.4 0.3 0.4 0.4] [0.6 0.1 0.5 0.3 0.4 0.4]]'
          ./valdcli -p 8081 search-by-id --elapsed-time abc
          ./valdcli -p 8081 stream-search-by-id --elapsed-time '["abc" "d923e43c-7bdc-40fd-9a95-26e54edc54a5" "75666cc5-c5e8-4ba6-a653-7f4f216e2710"]'
          kill $pid
