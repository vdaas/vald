#
# Copyright (C) 2019-2023 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: "Run E2E deploy and integration test"
on:
  push:
    tags:
      - "*.*.*"
      - "v*.*.*"
      - "*.*.*-*"
      - "v*.*.*-*"
  pull_request:
    types:
      - "labeled"
jobs:
  dump-contexts-to-log:
    if: startsWith( github.ref, 'refs/tags/') || github.event.action == 'labeled' && github.event.label.name == 'actions/e2e-deploy'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/dump-context

  e2e-stream-crud:
    name: "E2E test (Stream CRUD)"
    needs: [dump-contexts-to-log]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3

      - name: Set Git config
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}

      - name: Setup E2E environment
        id: setup_e2e
        uses: ./.github/actions/setup-e2e

      - name: Deploy Vald
        id: deploy_vald
        uses: ./.github/actions/e2e-deploy-vald
        with:
          helm_extra_options: ${{ steps.setup_e2e.outputs.HELM_EXTRA_OPTIONS }}
          values: .github/helm/values/values-lb.yaml
          wait_for_selector: app=vald-lb-gateway

      - name: Run E2E CRUD
        run: |
          make hack/benchmark/assets/dataset/${DATASET}
          make E2E_BIND_PORT=8081 \
            E2E_DATASET_NAME=${DATASET} \
            E2E_INSERT_COUNT=10000 \
            E2E_SEARCH_COUNT=10000 \
            E2E_SEARCH_BY_ID_COUNT=10000 \
            E2E_GET_OBJECT_COUNT=100 \
            E2E_UPDATE_COUNT=100 \
            E2E_UPSERT_COUNT=100 \
            E2E_REMOVE_COUNT=100 \
            E2E_WAIT_FOR_CREATE_INDEX_DURATION=3m \
            E2E_TARGET_POD_NAME=${POD_NAME} \
            E2E_TARGET_NAMESPACE=default \
            e2e
        env:
          DATASET: fashion-mnist-784-euclidean.hdf5
          POD_NAME: ${{ steps.deploy_vald.outputs.POD_NAME }}

  e2e-stream-crud-for-operator:
    name: "E2E test (Stream CRUD) for operator"
    needs: [dump-contexts-to-log]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3

      - name: Set Git config
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}

      - name: Setup E2E environment
        id: setup_e2e
        uses: ./.github/actions/setup-e2e

      - name: Create Helm options for vald-helm-operator
        uses: ./.github/actions/setup-e2e
        id: vald_helm_operator
        with:
          target_images: "vdaas/vald-helm-operator"
          require_libhdf5: false
          require_go: false
          require_helm: false
          require_k3d: false

      - name: Merge Docker image tag
        run: |
          IMAGE_TAGS=(${{ steps.setup_e2e.outputs.IMAGE_TAGS }})

          for IMAGE_TAG in "${IMAGE_TAGS[@]}"
          do
            echo "IMAGE_TAG:${IMAGE_TAG}"

            ARR=(${IMAGE_TAG//=/ })
            FIELD=${ARR[0]}
            TAG="\"${ARR[1]}\""
            yq e ".spec.$FIELD=$TAG" -i ./.github/valdrelease/valdrelease.yaml
          done

      - name: Deploy Vald
        id: deploy_vald
        uses: ./.github/actions/e2e-deploy-vald-helm-operator
        with:
          helm_extra_options: ${{ steps.vald_helm_operator.outputs.HELM_EXTRA_OPTIONS }}
          valdrelease: ./.github/valdrelease/valdrelease.yaml
          wait_for_selector: app=vald-lb-gateway

      - name: Run E2E CRUD
        run: |
          make hack/benchmark/assets/dataset/${DATASET}
          make E2E_BIND_PORT=8081 \
            E2E_DATASET_NAME=${DATASET} \
            E2E_INSERT_COUNT=10000 \
            E2E_SEARCH_COUNT=10000 \
            E2E_SEARCH_BY_ID_COUNT=10000 \
            E2E_GET_OBJECT_COUNT=100 \
            E2E_UPDATE_COUNT=100 \
            E2E_UPSERT_COUNT=100 \
            E2E_REMOVE_COUNT=100 \
            E2E_WAIT_FOR_CREATE_INDEX_DURATION=3m \
            E2E_TARGET_POD_NAME=${POD_NAME} \
            E2E_TARGET_NAMESPACE=default \
            e2e
        env:
          DATASET: fashion-mnist-784-euclidean.hdf5
          POD_NAME: ${{ steps.deploy_vald.outputs.POD_NAME }}

  e2e-stream-crud-skip-exist-check:
    name: "E2E test (Stream CRUD: skip strict exist check)"
    needs: [dump-contexts-to-log]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3

      - name: Set Git config
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}

      - name: Setup E2E environment
        id: setup_e2e
        uses: ./.github/actions/setup-e2e

      - name: Deploy Vald
        id: deploy_vald
        uses: ./.github/actions/e2e-deploy-vald
        with:
          helm_extra_options: ${{ steps.setup_e2e.outputs.HELM_EXTRA_OPTIONS }}
          values: .github/helm/values/values-lb.yaml
          wait_for_selector: app=vald-lb-gateway

      - name: Run E2E CRUD
        run: |
          make hack/benchmark/assets/dataset/${DATASET}
          make E2E_BIND_PORT=8081 \
            E2E_DATASET_NAME=${DATASET} \
            E2E_INSERT_COUNT=10 \
            E2E_SEARCH_COUNT=10 \
            E2E_SEARCH_BY_ID_COUNT=10 \
            E2E_GET_OBJECT_COUNT=10 \
            E2E_UPDATE_COUNT=10 \
            E2E_UPSERT_COUNT=10 \
            E2E_REMOVE_COUNT=10 \
            E2E_WAIT_FOR_CREATE_INDEX_DURATION=3m \
            E2E_TARGET_POD_NAME=${POD_NAME} \
            E2E_TARGET_NAMESPACE=default \
            e2e/skip
        env:
          DATASET: fashion-mnist-784-euclidean.hdf5
          POD_NAME: ${{ steps.deploy_vald.outputs.POD_NAME }}

  e2e-multiapis-crud:
    name: "E2E test (Multi-APIs CRUD)"
    needs: [dump-contexts-to-log]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3

      - name: Set Git config
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}

      - name: Setup E2E environment
        id: setup_e2e
        uses: ./.github/actions/setup-e2e

      - name: Deploy Vald
        id: deploy_vald
        uses: ./.github/actions/e2e-deploy-vald
        with:
          helm_extra_options: ${{ steps.setup_e2e.outputs.HELM_EXTRA_OPTIONS }}
          values: .github/helm/values/values-lb.yaml
          wait_for_selector: app=vald-lb-gateway

      - name: Run E2E CRUD
        run: |
          make hack/benchmark/assets/dataset/${DATASET}
          make E2E_BIND_PORT=8081 \
            E2E_DATASET_NAME=${DATASET} \
            E2E_INSERT_COUNT=100 \
            E2E_SEARCH_COUNT=10 \
            E2E_SEARCH_BY_ID_COUNT=10 \
            E2E_WAIT_FOR_CREATE_INDEX_DURATION=2m \
            E2E_TARGET_POD_NAME=${POD_NAME} \
            E2E_TARGET_NAMESPACE=default \
            e2e/multi
        env:
          DATASET: fashion-mnist-784-euclidean.hdf5
          POD_NAME: ${{ steps.deploy_vald.outputs.POD_NAME }}

  e2e-agent-and-sidecar:
    name: "E2E Agent & Sidecar test"
    needs: [dump-contexts-to-log]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3

      - name: Set Git config
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}

      - name: Setup E2E environment
        id: setup_e2e
        uses: ./.github/actions/setup-e2e

      - name: Deploy Vald
        id: deploy_vald
        uses: ./.github/actions/e2e-deploy-vald
        with:
          require_minio: "true"
          helm_extra_options: ${{ steps.specify_container_versions.outputs.HELM_EXTRA_OPTIONS }}
          values: .github/helm/values/values-agent-sidecar.yaml
          wait_for_selector: app=vald-agent-ngt
          wait_for_timeout: 29m

      - name: Run E2E Agent & Sidecar
        run: |
          make hack/benchmark/assets/dataset/${DATASET}
          make E2E_BIND_PORT=8081 \
            E2E_DATASET_NAME=${DATASET} \
            E2E_INSERT_COUNT=10000 \
            E2E_SEARCH_COUNT=4000 \
            E2E_WAIT_FOR_CREATE_INDEX_DURATION=8m \
            E2E_TARGET_POD_NAME=${POD_NAME} \
            E2E_TARGET_NAMESPACE=default \
            e2e/sidecar
        env:
          DATASET: fashion-mnist-784-euclidean.hdf5
          POD_NAME: ${{ steps.deploy_vald.outputs.POD_NAME }}

  slack-notification:
    name: "Slack notification"
    if: startsWith( github.ref, 'refs/tags/')
    needs:
      - e2e-agent-and-sidecar
      - e2e-multiapis-crud
      - e2e-stream-crud
      - e2e-stream-crud-for-operator
      - e2e-stream-crud-skip-exist-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/notify-slack
        with:
          author_name: "E2E deploy test"
          slack_notify_webhook_url: ${{ secrets.SLACK_NOTIFY_WEBHOOK_URL }}
