#
# Copyright (C) 2019-2025 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: Run formatter
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  dump-contexts-to-log:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/dump-context
  detect-ci-container:
    uses: ./.github/workflows/_detect-ci-container.yaml
  format:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: [detect-ci-container]
    container:
      image: ghcr.io/vdaas/vald/vald-ci-container:${{ needs.detect-ci-container.outputs.TAG }}
      credentials:
        username: ${{ secrets.PACKAGE_USER }}
        password: ${{ secrets.PACKAGE_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.DISPATCH_TOKEN }}
      - name: Set Git config
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}
      - uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Switch new branch
        id: switch_to_new_branch
        run: |
          TIMESTAMP=$(date +%Y%m%d_%H%M%S_%3N)
          BRANCH_NAME="formatter/go_and_yaml/format_at_${TIMESTAMP}"
          git checkout main
          git checkout -b ${BRANCH_NAME}
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_OUTPUT
      - name: Run formatter and license.go
        run: |
          make deps/install proto/replace license format format/go format/go/test
          git checkout go.mod go.sum ./example/client/go.mod ./example/client/go.sum ./rust/Cargo.lock ./rust/rust-toolchain.toml ./dockers
      - name: Check difference
        id: check_diff
        run: |
          if git diff --quiet --exit-code; then
            echo "Nothing updated"
          else
            git diff && git status
            echo "HAS_GIT_DIFF=true" >> $GITHUB_OUTPUT
          fi
      - name: Get Label
        id: pr-label
        if: ${{ steps.check_diff.outputs.HAS_GIT_DIFF == 'true' }}
        run: |
          LATEST=$(make version/vald | grep -o -E "[0-9]+\.[0-9]+")
          if ${LATEST} eq "1.7"; then
            echo "LABELS=release/v${LATEST}" >> $GITHUB_OUTPUT
          else
            SUPPORT=$(echo ${LATEST} | awk '{print $1-0.1}')
            echo "LABELS=actions/backport/release/v${LATEST},release/v${SUPPORT}" >> $GITHUB_OUTPUT
          fi
      - name: Create PR
        if: ${{ steps.check_diff.outputs.HAS_GIT_DIFF == 'true' }}
        uses: peter-evans/create-pull-request@v7
        with:
          author: "${{ secrets.DISPATCH_USER }} <vald@vdaas.org>"
          token: ${{ secrets.DISPATCH_TOKEN }}
          committer: "${{ secrets.DISPATCH_USER }} <vald@vdaas.org>"
          signoff: true
          delete-branch: true
          base: main
          title: "Update license headers / Format codes"
          body: "Update license headers / Format Go codes and YAML files."
          labels: ${{ steps.pr-label.outputs.LABELS }}
  check-format-diff:
    if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false }}
    runs-on: ubuntu-latest
    needs: [detect-ci-container]
    container:
      image: ghcr.io/vdaas/vald/vald-ci-container:${{ needs.detect-ci-container.outputs.TAG }}
      credentials:
        username: ${{ secrets.PACKAGE_USER }}
        password: ${{ secrets.PACKAGE_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.DISPATCH_TOKEN }}
      - name: Set Git config
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}
      - name: Run `make format` and `make deps/install`
        run: |
          make deps/install proto/replace license format format/go format/go/test
          git checkout go.mod go.sum ./example/client/go.mod ./example/client/go.sum ./rust/Cargo.lock ./rust/rust-toolchain.toml ./dockers
      - name: Check format and deps difference
        run: |
          if git diff --quiet --exit-code; then
            echo "Nothing updated"
          else
            git diff
            echo "Please execute \`make format\` locally."
            exit 1
          fi
