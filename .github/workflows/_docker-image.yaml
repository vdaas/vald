#
# Copyright (C) 2019-2024 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: "Build docker image"
on:
  workflow_call:
    inputs:
      target:
        type: string
        description: "Build target. e.g. `agent-ngt`"
        required: true
      platforms:
        type: string
        description: "If it is specified, specified platforms will be used."
        required: false
        default: ""
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref != 'refs/heads/main' && github.ref || github.sha }}-${{ github.event_name }}-${{ inputs.target }}
  cancel-in-progress: true
jobs:
  dump-contexts-to-log:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/dump-context
  build:
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false) || (github.event.pull_request.head.repo.fork == true && github.event_name == 'pull_request_target' && contains(github.event.pull_request.labels.*.name, 'ci/approved')) || (github.event_name == 'push' && github.ref == 'refs/heads/main') || startsWith( github.ref, 'refs/tags/') }}
    steps:
      - name: Get ref
        id: ref
        run: |
          if [ ${{ github.event.pull_request.head.sha }} != "" ]; then
            echo ref=${{ github.event.pull_request.head.sha }} >> $GITHUB_OUTPUT
          else
            echo ref=${{ github.sha }} >> $GITHUB_OUTPUT
          fi
      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.ref.outputs.ref }}
      - name: Set Git config
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:master
          platforms: linux/amd64,linux/arm64
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          platforms: linux/amd64,linux/arm64
          driver-opts: |
            image=moby/buildkit:master
            network=host
          buildkitd-flags: "--debug --oci-worker-gc=false"
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # username: ${{ github.actor }}
          # password: ${{ secrets.GITHUB_TOKEN }}
          username: ${{ secrets.PACKAGE_USER }}
          password: ${{ secrets.PACKAGE_TOKEN }}
      - name: Build and Publish
        id: build_and_publish
        uses: ./.github/actions/docker-build
        with:
          target: ${{ inputs.target }}
          platforms: ${{ inputs.platforms }}
          builder: ${{ steps.buildx.outputs.name }}
      - name: Scan the Docker image
        if: startsWith( github.ref, 'refs/tags/')
        uses: ./.github/actions/scan-docker-image
        with:
          image_ref: "${{ steps.build_and_publish.outputs.IMAGE_NAME }}:${{ steps.build_and_publish.outputs.PRIMARY_TAG }}"
  slack:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main' || startsWith( github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/notify-slack
        with:
          author_name: ${{ inputs.target }} image build
          slack_notify_webhook_url: ${{ secrets.SLACK_NOTIFY_WEBHOOK_URL }}
