#
# Copyright (C) 2019-2023 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: "Run E2E Max Dimension test"
on:
  push:
    tags:
      - "*.*.*"
      - "v*.*.*"
      - "*.*.*-*"
      - "v*.*.*-*"
  pull_request:
    types:
      - "labeled"

jobs:
  dump-contexts-to-log:
    if: startsWith( github.ref, 'refs/tags/') || github.event.action == 'labeled' && github.event.label.name == 'actions/e2e-max-dim'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/dump-context

  e2e-max-dimension-insert:
    name: "E2E test (Max Dimension Insert: skip strict exist check)"
    needs: [dump-contexts-to-log]
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v3

      - name: Set Git config
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}

      - name: Setup E2E environment
        id: setup_e2e
        uses: ./.github/actions/setup-e2e

      - name: Run E2E MaxDimension
        run: |
          go get github.com/vdaas/vald-client-go/v1/payload
          go get github.com/vdaas/vald-client-go/v1/vald
          BIT=18
          RELEASE=`helm list | grep vald | awk '{print $1}'`
          while [ $BIT -ne 32 ]; do
            echo "Start: Bit=${BIT}"
            FILE="tmp.log"
            touch ${FILE}
            FILEPATH=`readlink -f ${FILE}`
            DIM=$((1<<$BIT))
            if [ $BIT = "32" ]; then
              DIM=$(($DIM-1))
            fi

            export HELM_EXTRA_OPTIOINS="--set agent.ngt.dimension=${DIM}"
            make k8s/vald/deploy VERSION="nightly" HELM_VALUES=${VALUES} HELM_EXTRA_OPTIONS="${HELM_EXTRA_OPTIOINS}"

            sleep 3

            kubectl rollout restart statefulset vald-agent-ngt

            sleep 30

            kubectl wait --for=condition=Ready pod -l ${WAIT_FOR_SELECTOR} --timeout=${WAIT_FOR_TIMEOUT}
            POD_NAME=`kubectl get pods | grep vald-lb-gateway | awk '{print $1}'`
            make E2E_BIND_PORT=8081 \
              E2E_MAX_DIM_RESULT_FILEPATH=${FILEPATH} \
              E2E_MAX_DIM_BIT=${BIT} \
              E2E_TARGET_POD_NAME=${POD_NAME} \
              E2E_TARGET_NAMESPACE=default \
              e2e/maxdim
            CODE=`sed -n 1P ${FILEPATH}`
            if [ ${CODE} = "ResourceExhausted" ]; then
              echo "Finish: Bit=${BIT} with ${CODE}"
              BIT=$(($BIT-1))
              rm ${FILEPATH}
              break;
            fi
            if [ ${CODE} != "OK" ]; then
              echo "Finish: Bit=${BIT} with Error: ${CODE}"
              rm ${FILEPATH}
              break;
            fi
            echo "Finish: Bit=${BIT}"
            BIT=$(($BIT+1))
            rm ${FILEPATH}

            echo "removing cluster"
            make k8s/vald/delete VERSION="nightly" HELM_VALUES=${VALUES} HELM_EXTRA_OPTIONS="${HELM_EXTRA_OPTIOINS}"
          done
          echo "MAX_BIT=${BIT}" >> $GITHUB_OUTPUT
          echo "MAX_BIT=${BIT}"
        env:
          WAIT_FOR_SELECTOR: app=vald-agent-ngt
          WAIT_FOR_TIMEOUT: 29m
          VALUES: .github/helm/values/values-max-dim.yaml
        timeout-minutes: 60

  slack-notification:
    name: "Slack notification"
    needs: [e2e-max-dimension-insert]
    runs-on: ubuntu-latest
    if: startsWith( github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/notify-slack
        with:
          author_name: "E2E max dim test"
          slack_notify_webhook_url: ${{ secrets.SLACK_NOTIFY_WEBHOOK_URL }}
