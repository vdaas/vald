//
// Copyright (C) 2019-2024 vdaas.org vald team <vald@vdaas.org>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// You may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package vald.v1;

import "google/api/annotations.proto";
import "v1/payload/payload.proto";

option go_package = "github.com/vdaas/vald/apis/grpc/v1/vald";
option java_multiple_files = true;
option java_outer_classname = "ValdIndex";
option java_package = "org.vdaas.vald.api.v1.vald";

// Represent the index manager service.
service Index {
  // Represent the RPC to get the index information.
  rpc IndexInfo(payload.v1.Empty) returns (payload.v1.Info.Index.Count) {
    option (google.api.http).get = "/index/info";
  }
  // Represent the RPC to get the index information for each agents.
  rpc IndexDetail(payload.v1.Empty) returns (payload.v1.Info.Index.Detail) {
    option (google.api.http).get = "/index/detail";
  }
  // Represent the RPC to get the index statistics.
  rpc IndexStatistics(payload.v1.Empty) returns (payload.v1.Info.Index.Statistics) {
    option (google.api.http).get = "/index/statistics";
  }

  // Represent the RPC to get the index statistics for each agents.
  rpc IndexStatisticsDetail(payload.v1.Empty) returns (payload.v1.Info.Index.StatisticsDetail) {
    option (google.api.http).get = "/index/statistics/detail";
  }

  // Represent the RPC to get the index property.
  rpc IndexProperty(payload.v1.Empty) returns (payload.v1.Info.Index.PropertyDetail) {
    option (google.api.http).get = "/index/property";
  }
}
