//
// Copyright (C) 2019-2021 vdaas.org vald team <vald@vdaas.org>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package filter.ingress.v1;

option go_package = "github.com/vdaas/vald/apis/grpc/v1/filter/ingress";
option java_multiple_files = true;
option java_package = "org.vdaas.vald.api.v1.filter.ingress";
option java_outer_classname = "ValdIngressFilter";

import "apis/proto/v1/payload/payload.proto";
import "google/api/annotations.proto";


service IngressFilter {
  rpc GenVector(payload.v1.Object.Blob) returns (payload.v1.Object.Vector) {
    option (google.api.http) = {
      post : "/object"
      body : "*"
    };
  }
  rpc StreamGenVector(stream payload.v1.Object.Blob)
      returns (stream payload.v1.Object.StreamVector) {}

  rpc FilterVector(payload.v1.Object.Vector) returns (payload.v1.Object.Vector) {
    option (google.api.http) = {
      post : "/vector"
      body : "*"
    };

  }
  rpc StreamFilterVector(stream payload.v1.Object.Vector)
      returns (stream payload.v1.Object.StreamVector) {}
}
