//
// Copyright (C) 2019-2020 Vdaas.org Vald team ( kpango, rinx, kmrmt )
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package ingress_filter;

option go_package = "github.com/vdaas/vald/apis/grpc/filter/ingress";
option java_multiple_files = true;
option java_package = "org.vdaas.vald.filter.ingress";
option java_outer_classname = "ValdIngressFilter";

import "payload.proto";
import "google/api/annotations.proto";
import "pb/gql.proto";

service IngressFilter {
  rpc GenVector(payload.Object.Blob) returns (payload.Object.Vector) {
    option (google.api.http) = {
      post : "/object"
      body : "*"
    };
  }
  rpc StreamGenVector(stream payload.Object.Blob)
      returns (stream payload.Object.Vector) {}

  rpc FilterVector(payload.Object.Vector) returns (payload.Object.Vector) {
    option (google.api.http) = {
      post : "/vector"
      body : "*"
    };
    option (gql.rpc_type) = MUTATION;
  }
  rpc StreamFilterVector(stream payload.Object.Vector)
      returns (stream payload.Object.Vector) {}
}
