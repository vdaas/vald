#
# Copyright (C) 2019-2022 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

openapi: 3.0.3
info:
    title: Upsert API
    description: Upsert service provides ways to insert/update vectors.
    version: 0.0.1
paths:
    /upsert:
        post:
            tags:
                - Upsert
            description: A method to insert/update a vector.
            operationId: Upsert_Upsert
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Upsert_Request'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Object_Location'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /upsert/multiple:
        post:
            tags:
                - Upsert
            description: A method to insert/update multiple vectors in a single request.
            operationId: Upsert_MultiUpsert
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Upsert_MultiRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Object_Locations'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        Filter_Config:
            type: object
            properties:
                targets:
                    type: array
                    items:
                        $ref: '#/components/schemas/Filter_Target'
                    description: Represent the filter target configuration.
            description: Represent filter configuration.
        Filter_Target:
            type: object
            properties:
                host:
                    type: string
                    description: The target hostname.
                port:
                    type: integer
                    description: The target port.
                    format: uint32
            description: Represent the target filter server.
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        Object_Location:
            type: object
            properties:
                name:
                    type: string
                    description: The name of the location.
                uuid:
                    type: string
                    description: The UUID of the vector.
                ips:
                    type: array
                    items:
                        type: string
                    description: The IP list.
            description: Represent the vector location.
        Object_Locations:
            type: object
            properties:
                locations:
                    type: array
                    items:
                        $ref: '#/components/schemas/Object_Location'
            description: Represent multiple vector locations.
        Object_Vector:
            type: object
            properties:
                id:
                    type: string
                    description: The vector ID.
                vector:
                    type: array
                    items:
                        type: number
                        format: float
                    description: The vector.
            description: Represent a vector.
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        Upsert_Config:
            type: object
            properties:
                skipStrictExistCheck:
                    type: boolean
                    description: A flag to skip exist check during upsert operation.
                filters:
                    $ref: '#/components/schemas/Filter_Config'
                timestamp:
                    type: integer
                    description: Upsert timestamp.
                    format: int64
            description: Represent the upsert configuration.
        Upsert_MultiRequest:
            type: object
            properties:
                requests:
                    type: array
                    items:
                        $ref: '#/components/schemas/Upsert_Request'
                    description: Represent the multiple upsert request content.
            description: Represent mthe ultiple upsert request.
        Upsert_Request:
            type: object
            properties:
                vector:
                    $ref: '#/components/schemas/Object_Vector'
                config:
                    $ref: '#/components/schemas/Upsert_Config'
            description: Represent the upsert request.
tags:
    - name: Upsert
