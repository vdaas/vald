//
// Copyright (C) 2019-2025 vdaas.org vald team <vald@vdaas.org>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// You may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: v1/mirror/mirror.proto

package mirror

import (
	reflect "reflect"
	unsafe "unsafe"

	payload "github.com/vdaas/vald/apis/grpc/v1/payload"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_v1_mirror_mirror_proto protoreflect.FileDescriptor

const file_v1_mirror_mirror_proto_rawDesc = "" +
	"\n" +
	"\x16v1/mirror/mirror.proto\x12\tmirror.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x18v1/payload/payload.proto2i\n" +
	"\x06Mirror\x12_\n" +
	"\bRegister\x12\x1a.payload.v1.Mirror.Targets\x1a\x1a.payload.v1.Mirror.Targets\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/mirror/registerBW\n" +
	"\x1corg.vdaas.vald.api.v1.mirrorB\n" +
	"ValdMirrorP\x01Z)github.com/vdaas/vald/apis/grpc/v1/mirrorb\x06proto3"

var file_v1_mirror_mirror_proto_goTypes = []any{
	(*payload.Mirror_Targets)(nil), // 0: payload.v1.Mirror.Targets
}

var file_v1_mirror_mirror_proto_depIdxs = []int32{
	0, // 0: mirror.v1.Mirror.Register:input_type -> payload.v1.Mirror.Targets
	0, // 1: mirror.v1.Mirror.Register:output_type -> payload.v1.Mirror.Targets
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_v1_mirror_mirror_proto_init() }
func file_v1_mirror_mirror_proto_init() {
	if File_v1_mirror_mirror_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_mirror_mirror_proto_rawDesc), len(file_v1_mirror_mirror_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_mirror_mirror_proto_goTypes,
		DependencyIndexes: file_v1_mirror_mirror_proto_depIdxs,
	}.Build()
	File_v1_mirror_mirror_proto = out.File
	file_v1_mirror_mirror_proto_goTypes = nil
	file_v1_mirror_mirror_proto_depIdxs = nil
}
